<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/3/2019 7:08:05 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FDONB044"
  DTS:CreatorName="FOREVERDIRECT\beek"
  DTS:DTSID="{02C50274-7EFB-4EC9-BBA0-6905BA979414}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1900.78"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="52"
  DTS:VersionGUID="{4C3016C1-14FC-46AE-9570-F264ED6E99D3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWH_Control_Package]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
      DTS:ObjectName="DWH_Control_Package">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=FDODWHD01\DWHDEV;Initial Catalog=DWH_Control;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B78E459D-C1A4-4FEE-8BA8-A6173134334B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwhResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B465FCFE-8A59-46CB-9BEB-401133410883}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="etlResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2EEF33B3-BB6F-4023-B9DB-ACC2116230D1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;ETL Status update off &quot; +  @[$Project::Environment] + &quot; on &quot; +  (DT_WSTR, 2)  DAY( GETDATE()  ) + &quot;-&quot; +   (DT_WSTR, 2)MONTH( GETDATE()  ) + &quot;-&quot; +   (DT_WSTR, 4)YEAR( GETDATE()  )"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailBody">
      <DTS:VariableValue
        DTS:DataType="8">ETL Status update off DEV on 11-2-2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9607012-403B-45A9-BE44-83D17781DBF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailCC">
      <DTS:VariableValue
        DTS:DataType="8">technicalit@foreverdirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{394D2D47-937A-40CB-8864-FF9FEBA3274B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFrom">
      <DTS:VariableValue
        DTS:DataType="8">ETL@ForeverDirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{905564C3-F068-47D8-9C1E-D2B7F097B00B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BI Logging &quot; +  @[$Project::Environment]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailSubject">
      <DTS:VariableValue
        DTS:DataType="8">BI Logging DEV</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFB5AA2C-6A2D-440C-9485-A7498AEE6ED2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailTo">
      <DTS:VariableValue
        DTS:DataType="8">ericvanbeek@foreverdirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FD0ABE5-443D-41C0-92BE-20C2B823556F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="odsResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F5BA222-DE09-4BEE-830C-537F26AC6EDE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ScriptTaskErrorMsg">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60466D58-8611-42D8-B373-D5E4046B8306}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="smtp">
      <DTS:VariableValue
        DTS:DataType="8">FDXEXMP01.foreverdirect.local</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D7AF39E-5590-4627-A152-DDE9E09BB154}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="stagingResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DWH result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{38AD79E1-45EF-4CB7-8799-8C15F1F5ED23}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DWH result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="select 'DEV ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'TST ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from [FDODWHT01\DWHTST].DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'ACC ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from [FDODWHA01\DWHACC].DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'PRD ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from [FDODWHP01\DWHPRD].DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::dwhResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8491052A-DC1E-4875-93D2-84D63D07B616}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="&#xA;WITH CTE_DEV AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;1 AS EnvironmentSort&#xA;&#x9;&#x9;, 'DEV' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_TST AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;2 AS EnvironmentSort&#xA;&#x9;&#x9;, 'TST' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_ACC AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;3 AS EnvironmentSort&#xA;&#x9;&#x9;, 'ACC' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_PRD AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;4 AS EnvironmentSort&#xA;&#x9;&#x9;, 'PRD' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;)&#xA;&#xA;SELECT&#xA;  X.[Environment]&#xA;  , X.[Source]&#xA;  , X.[Type]&#xA;  , X.[Start]&#xA;  , X.[End]&#xA;  , X.[Minutes]&#xA;FROM (&#xA;SELECT * FROM CTE_DEV&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 2, NULL, NULL, NULL, NULL, NULL, NULL&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_TST&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 3, NULL, NULL, NULL, NULL, NULL, NULL&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_ACC&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 4, NULL, NULL, NULL, NULL, NULL, NULL&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_PRD&#xA;) X&#xA;ORDER BY&#xA;  X.EnvironmentSort&#xA;  , X.Source&#xA;  , X.Type"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::etlResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ODS result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4ee5af3e-06c3-4f86-8393-5eb162883322}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ODS result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="select 'DEV ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) &#xA;UNION ALL&#xA;select 'TST ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHT01\DWHTST].DWH_Control.Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) &#xA;UNION ALL&#xA;select 'ACC ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHA01\DWHACC].DWH_Control.Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) &#xA;UNION ALL&#xA;select 'PRD ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHP01\DWHPRD].DWH_Control.Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0)&#xA;&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::odsResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{AD4DB696-2F7D-4780-931F-43D373A4D94C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1e596af4df2d4842bda45cdd53253089"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::dwhResult,User::etlResult,User::mailBody,User::mailCC,User::mailFrom,User::mailSubject,User::mailTo,User::odsResult,User::ScriptTaskErrorMsg,User::smtp,User::stagingResult">
          <ProjectItem
            Name="ST_1e596af4df2d4842bda45cdd53253089.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3f3ba971-b512-4dc9-8260-3afe875e92c0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_1e596af4df2d4842bda45cdd53253089</RootNamespace>
    <AssemblyName>ST_1e596af4df2d4842bda45cdd53253089</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_1e596af4df2d4842bda45cdd53253089")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_1e596af4df2d4842bda45cdd53253089")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a226967c-0431-4d6f-a027-12c53bd22145")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1e596af4df2d4842bda45cdd53253089</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1e596af4df2d4842bda45cdd53253089</msb:DisplayName>
		<msb:ProjectId>{148998E5-23CB-4BAC-B6B3-536F9FBD477A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1e596af4df2d4842bda45cdd53253089.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Data.SqlClient
Imports System.Net.Mail
Imports System.Net
Imports System.Collections.Generic
Imports System.Data.OleDb
Imports System.Text
Imports System.Text.RegularExpressions
Imports System.IO

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    Dim message As String

    Public Sub Main()
        Try
            '' Create a new dataset to store data tables
            Dim ds1, ds2, ds3, ds4 As New DataSet
            Dim oleDA1, oleDA2, oleDA3, oleDA4 As New OleDbDataAdapter
            Dim dt1, dt2, dt3, dt4 As New DataTable
            oleDA1.Fill(dt1, Dts.Variables("etlResult").Value)
            oleDA2.Fill(dt2, Dts.Variables("stagingResult").Value)
            oleDA3.Fill(dt3, Dts.Variables("dwhResult").Value)
            oleDA4.Fill(dt4, Dts.Variables("odsResult").Value)

            '' If data tables have rows then add it to the data set
            If dt1 IsNot Nothing AndAlso dt1.Rows.Count > 0 Then
                ds1.Tables.Add(dt1)
            End If

            If dt2 IsNot Nothing AndAlso dt2.Rows.Count > 0 Then
                ds2.Tables.Add(dt2)
            End If

            If dt3 IsNot Nothing AndAlso dt3.Rows.Count > 0 Then
                ds3.Tables.Add(dt3)
            End If

            If dt4 IsNot Nothing AndAlso dt4.Rows.Count > 0 Then
                ds4.Tables.Add(dt4)
            End If

            '' Count the number of tables in the data set
            Dim dsCount1 As Integer = ds1.Tables.Count
            Dim dsCount2 As Integer = ds2.Tables.Count
            Dim dsCount3 As Integer = ds3.Tables.Count
            Dim dsCount4 As Integer = ds4.Tables.Count
            Dim str As String = String.Empty
            Dim result As String = Dts.Variables("mailBody").Value.ToString()
            ''Dim stagingResult As String = Dts.Variables("stagingResult").Value.ToString()
            ''Dim dwhResult As String = Dts.Variables("dwhResult").Value.ToString()
            ''result = result & ControlChars.NewLine
            '' strBody and strBodyEnd adds the HTML tag information. 
            ''Dim strBody As String = "<html><body style='font-family: Arial, Helvetica, sans-serif;font-size: 12px;'>" & result.ToString & "<br><br>" & stagingResult.ToString & "<br>" & dwhResult.ToString & "<br><br>"
            Dim strBody As String = "<html><body style='font-family: Arial, Helvetica, sans-serif;font-size: 12px;'>" & result.ToString & "<br><br>"
            Dim strBodyEnd As String = "</body></html>"

            '' The following code captures the results of datatables and buils an html string to dispose as an email
            For x As Integer = 0 To dsCount2 - 1
                If ds2.Tables(x) IsNot Nothing AndAlso ds2.Tables(x).Rows.Count > 0 Then
                    Dim strText2 As String = DataTableToHTMLTable(ds2.Tables(x))
                    If x = 0 Then
                        str += strText2.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText2.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            For x As Integer = 0 To dsCount3 - 1
                If ds3.Tables(x) IsNot Nothing AndAlso ds3.Tables(x).Rows.Count > 0 Then
                    Dim strText3 As String = DataTableToHTMLTable(ds3.Tables(x))
                    If x = 0 Then
                        str += strText3.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText3.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            For x As Integer = 0 To dsCount4 - 1
                If ds4.Tables(x) IsNot Nothing AndAlso ds4.Tables(x).Rows.Count > 0 Then
                    Dim strText4 As String = DataTableToHTMLTable(ds4.Tables(x))
                    If x = 0 Then
                        str += strText4.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText4.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            For x As Integer = 0 To dsCount1 - 1
                If ds1.Tables(x) IsNot Nothing AndAlso ds1.Tables(x).Rows.Count > 0 Then
                    Dim strText1 As String = DataTableToHTMLTable(ds1.Tables(x))
                    If x = 0 Then
                        str += strText1.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText1.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            Dim msg As String = str.ToString
            message = strBody & msg & strBodyEnd
            Mail()   'only email if not empty recordset
            Dts.TaskResult = ScriptResults.Success
        Catch e As Exception
            Dim LockedVariable As Variables = Nothing
            Dts.VariableDispenser.LockOneForWrite("User::ScriptTaskErrorMsg", LockedVariable)
            LockedVariable("User::ScriptTaskErrorMsg").Value = "Error Description: " + e.Message.ToString()
            LockedVariable.Unlock()
            Dts.Events.FireError(0, "Script Task", "Error", String.Empty, 0)
            Dts.TaskResult = ScriptResults.Failure
        End Try
    End Sub

    Public Function DataTableToHTMLTable(ByVal inTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<style scoped>.myTable { background-color:#f4f4f4; width:900px;font-family: Arial, Helvetica, sans-serif;font-size: 12px;}.myTable th { background-color:#f4f4f4;color:black;text-align:left; }.myTable td, .myTable th { padding:0px;border:0px solid #000000; }</style>")
        dString.Append("<table class=myTable> ")
        dString.Append(GetHeader(inTable))
        dString.Append(GetBody(inTable))
        dString.Append("</table>")
        Return dString.ToString
    End Function

    Private Function GetHeader(ByVal dTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<thead><tr>")
        For Each dColumn As DataColumn In dTable.Columns
            dString.AppendFormat("<th>{0}</th>", dColumn.ColumnName)
        Next
        dString.Append("</tr></thead>")
        Return dString.ToString
    End Function

    Private Function GetBody(ByVal dTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<tbody>")
        For Each dRow As DataRow In dTable.Rows
            dString.Append("<tr>")
            For dCount As Integer = 0 To dTable.Columns.Count - 1
                dString.AppendFormat("<td>{0}</td>", dRow(dCount))
            Next
            dString.Append("</tr>")
        Next
        dString.Append("</tbody>")
        Return dString.ToString()
    End Function

    Public Sub Mail()
        ''Variable Declaration
        Dim Mail As MailMessage
        Dim Client As SmtpClient
        Dim EmailFrom As String = Dts.Variables("mailFrom").Value.ToString()
        Dim EmailTo As String = Dts.Variables("mailTo").Value.ToString()
        Dim EmailSubject As String = Dts.Variables("mailSubject").Value.ToString()
        Dim EmailCc As String = Dts.Variables("mailCC").Value.ToString()
        Dim From As New MailAddress(EmailFrom.ToString)
        Mail = New MailMessage(From.ToString, EmailTo.ToString, EmailSubject.ToString, message)
        Client = New SmtpClient(Dts.Variables("smtp").Value.ToString())
        Client.Credentials = CredentialCache.DefaultNetworkCredentials

        Mail.IsBodyHtml = True
        Mail.CC.Add(EmailCc)
        Client.Send(Mail)
    End Sub

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_1e596af4df2d4842bda45cdd53253089.dll">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
PQEJAPEIAQARAPEIBgAZAPEICgApAPEIEAAxAPEIEAA5APEIEABBAPEIEABJAPEIEABRAPEIEABZ
APEIFQBhAPEIFQBpAPEIEABxAPEIEAB5APEIEACBAPEIGgCRAPEIIACpAPEIBgCxAPEIBgC5APEI
BgDRAPEIJgDpAPEIEAAJAfEIBgARAfEIBgCZAPEIBgChAPEIBgAMAPEIBgAUAPEIBgAcAPEIBgAk
APEIBgAMAC0BSgAUAC0BSgAcAC0BSgAkAC0BSgDBAPEIBgDZANcBTwDZAC8MVwDxAPEIXQChAUMF
ZQABAfEIBgCpAWoIagCpAZELagAZAfEIBgApAfEIBgAxAfEIBgA5AfEIBgAZASkLsACxAYUKtgBR
AYoGvAC5AS8FwwAxAXYGxwA5AUoLzwDBAbwL1QApAXoK2QDJAfgA3wDRAbwL1QDZATwM5gDBAH0F
6QDZAX0F6QDZAVML7QDJAYoG9ADZAVML+wDhAX0FAQHpARYBBgGJAX0F6QCxAZYLAQD5Ab0IEgGx
AVQIGQEBAtQCHwFJAVIB6QC5ATkFKAFRAYsFBgCxAT8LLQEJAqEIMwH5AasIPAFZAfEIBgBZAQEB
QAFZAX0F6QA5AdsKUwHRAdkIWQFhAbALwwBpAekB6QBZAVoLXwFhAdkLZwEZArcCBgDBAdkIWQFx
AYoGeQGBAfEIEACBAX0F6QB5AfEIJgAhAvEIEAApArYKiwEhAqYKkQF5AXsGFQB5AVgAmAFBAvgA
EAAhAvwAngHBANQKpQHBAEYB1QBJAh4BsgE0AO4LyQE8AC8FSgA8ADkF4AE8APEIBgAIADAAAQII
ADQABgIpAKsAMAQuAAsArgIuABMAtwIuABsA1gIuACMA3wIuACsACAMuADMACAMuADsA3wIuAEMA
DgMuAEsACAMuAFMAJQMuAFsACAMuAGMAKwMuAGsAVQMuAHMAYgNAAIsABgJAAIMArANDAHsAtQND
AIMArANJAKsAQQRjAHsAtQNjAIMArANpAKsAVQSAAIsABgKDAJMABgKDAJsABgKDAHsAtQOJAKsA
YgSgAIsABgKpAIMA1gLAAIsABgLJAIMA1gLgAIsABgLjALsABgLjAFMACAPpALMABgIDAYMArAMD
AaMAzgMjAYMArAMjAVsACAOgAoMArAOgAosABgLAAoMArAPAAosABgLgAoMArAPgAosABgIAA4MA
rAMAA4sABgIgA4sABgJAA4sABgJgA4sABgJgA4MArAOAA4sABgKgA4sABgKgA4MArANvAEcBawF+
AaoBvQEEAAEABQAFAAYABwAJAAgAAACQCIYCAADkBosCAABPCJACAABJCZUCAAAPCJoCAABQAp8C
AABMBaQCAAAxAakCAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAO
AA8AAgAcABEALgA1ADwAQwCvAcIB0QHYAQSAAAABAAAAAAAAAAAAAAAAACsAAAAEAAAAAAAAAAAA
AADmAdkAAAAAAAQAAAAAAAAAAAAAAOYBkwYAAAAACgAAAAAAAAAAAAAA7wHiAAAAAAANAAAAAAAA
AAAAAAD4AZIFAAAAAAQAAAAAAAAAAAAAAOYBrwAAAAAADQAAAAAAAAAAAAAA+AFfAAAAAAAAAAAA
AQAAADMKAAAIAAQACQAEAAoABwAAABAAEgB+AAAAEAAzAH4AAAAAADUAfgDHALgBxwDbAQAAAENv
bnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAFNUXzFlNTk2YWY0ZGYyZDQ4
NDJiZGE0NWNkZDUzMjUzMDg5ADxNb2R1bGU+AGdldF9DQwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMAVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAFByb2plY3REYXRhAFN5c3RlbS5EYXRhLk9sZURiAG1zY29ybGliAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYwBBZGQAU2VuZABBcHBlbmQAQ29tcGFyZU1ldGhvZABSZXBsYWNlAENy
ZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBnZXRfTWVz
c2FnZQBNYWlsTWVzc2FnZQBtZXNzYWdlAENyZWRlbnRpYWxDYWNoZQBEYXRhVGFibGVUb0hUTUxU
YWJsZQBEYXRhVGFibGUAZFRhYmxlAGluVGFibGUAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0NvbHVtbk5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBHZXRUeXBlAFZhcmlhbnRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tPbmVGb3JXcml0ZQBHdWlk
QXR0cmlidXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
U3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVu
QXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRo
cmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGgAVW5sb2NrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNl
cnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
eXN0ZW0uTmV0Lk1haWwAU1RfMWU1OTZhZjRkZjJkNDg0MmJkYTQ1Y2RkNTMyNTMwODkuZGxsAEZp
bGwAc2V0X0lzQm9keUh0bWwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AU3lzdGVtLkNvbXBvbmVudE1v
ZGVsLkRlc2lnbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGlj
YXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ARGF0YVRhYmxlQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBNYWlsQWRk
cmVzc0NvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAEdl
dEhlYWRlcgBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0
ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBTdHJpbmdCdWls
ZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIARXZlbnRzT2Jq
ZWN0V3JhcHBlcgBnZXRfVXNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIARW50ZXIAT2xlRGJEYXRh
QWRhcHRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEZpcmVFcnJvcgBDbGVhclBy
b2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBBY3Rp
dmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BT
ZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMWU1OTZhZjRkZjJkNDg0
MmJkYTQ1Y2RkNTMyNTMwODkuTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNUXzFlNTk2YWY0ZGYy
ZDQ4NDJiZGE0NWNkZDUzMjUzMDg5LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
Z2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAFN0cmluZ3MATXlTZXR0aW5ncwBzZXRfQ3JlZGVudGlh
bHMAZ2V0X0RlZmF1bHROZXR3b3JrQ3JlZGVudGlhbHMARXF1YWxzAGdldF9Db2x1bW5zAENvbnZl
cnNpb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBSdW50aW1lSGVscGVycwBTdWNjZXNzAE1haWxBZGRy
ZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAGdldF9Sb3dzAENvbmNhdABBcHBl
bmRGb3JtYXQAbV9TeW5jT2JqZWN0AE15UHJvamVjdABTeXN0ZW0uTmV0AERhdGFTZXQARXhpdABz
ZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AGdldF9DdXJyZW50AGdldF9Db3VudABJQ3JlZGVudGlh
bHNCeUhvc3QATW92ZU5leHQAU3lzdGVtLlRleHQAbV9Db250ZXh0AERhdGFSb3cAU1RfMWU1OTZh
ZjRkZjJkNDg0MmJkYTQ1Y2RkNTMyNTMwODkuTXkAR2V0Qm9keQBnZXRfQXNzZW1ibHkARW1wdHkA
AAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAATZQB0
AGwAUgBlAHMAdQBsAHQAABtzAHQAYQBnAGkAbgBnAFIAZQBzAHUAbAB0AAATZAB3AGgAUgBlAHMA
dQBsAHQAABNvAGQAcwBSAGUAcwB1AGwAdAAAEW0AYQBpAGwAQgBvAGQAeQAAgJ88AGgAdABtAGwA
PgA8AGIAbwBkAHkAIABzAHQAeQBsAGUAPQAnAGYAbwBuAHQALQBmAGEAbQBpAGwAeQA6ACAAQQBy
AGkAYQBsACwAIABIAGUAbAB2AGUAdABpAGMAYQAsACAAcwBhAG4AcwAtAHMAZQByAGkAZgA7AGYA
bwBuAHQALQBzAGkAegBlADoAIAAxADIAcAB4ADsAJwA+AAERPABiAHIAPgA8AGIAcgA+AAAdPAAv
AGIAbwBkAHkAPgA8AC8AaAB0AG0AbAA+AAAJPABiAHIAPgAAIVEAdQBlAHIAeQAgAFIAZQBzAHUA
bAB0ACAAUwBlAHQAADFVAHMAZQByADoAOgBTAGMAcgBpAHAAdABUAGEAcwBrAEUAcgByAG8AcgBN
AHMAZwAAJ0UAcgByAG8AcgAgAEQAZQBzAGMAcgBpAHAAdABpAG8AbgA6ACAAABdTAGMAcgBpAHAA
dAAgAFQAYQBzAGsAAAtFAHIAcgBvAHIAAIITPABzAHQAeQBsAGUAIABzAGMAbwBwAGUAZAA+AC4A
bQB5AFQAYQBiAGwAZQAgAHsAIABiAGEAYwBrAGcAcgBvAHUAbgBkAC0AYwBvAGwAbwByADoAIwBm
ADQAZgA0AGYANAA7ACAAdwBpAGQAdABoADoAOQAwADAAcAB4ADsAZgBvAG4AdAAtAGYAYQBtAGkA
bAB5ADoAIABBAHIAaQBhAGwALAAgAEgAZQBsAHYAZQB0AGkAYwBhACwAIABzAGEAbgBzAC0AcwBl
AHIAaQBmADsAZgBvAG4AdAAtAHMAaQB6AGUAOgAgADEAMgBwAHgAOwB9AC4AbQB5AFQAYQBiAGwA
ZQAgAHQAaAAgAHsAIABiAGEAYwBrAGcAcgBvAHUAbgBkAC0AYwBvAGwAbwByADoAIwBmADQAZgA0
AGYANAA7AGMAbwBsAG8AcgA6AGIAbABhAGMAawA7AHQAZQB4AHQALQBhAGwAaQBnAG4AOgBsAGUA
ZgB0ADsAIAB9AC4AbQB5AFQAYQBiAGwAZQAgAHQAZAAsACAALgBtAHkAVABhAGIAbABlACAAdABo
ACAAewAgAHAAYQBkAGQAaQBuAGcAOgAwAHAAeAA7AGIAbwByAGQAZQByADoAMABwAHgAIABzAG8A
bABpAGQAIAAjADAAMAAwADAAMAAwADsAIAB9ADwALwBzAHQAeQBsAGUAPgABLTwAdABhAGIAbABl
ACAAYwBsAGEAcwBzAD0AbQB5AFQAYQBiAGwAZQA+ACAAABE8AC8AdABhAGIAbABlAD4AABc8AHQA
aABlAGEAZAA+ADwAdAByAD4AABk8AHQAaAA+AHsAMAB9ADwALwB0AGgAPgAAGzwALwB0AHIAPgA8
AC8AdABoAGUAYQBkAD4AAA88AHQAYgBvAGQAeQA+AAAJPAB0AHIAPgAAGTwAdABkAD4AewAwAH0A
PAAvAHQAZAA+AAALPAAvAHQAcgA+AAARPAAvAHQAYgBvAGQAeQA+AAARbQBhAGkAbABGAHIAbwBt
AAANbQBhAGkAbABUAG8AABdtAGEAaQBsAFMAdQBiAGoAZQBjAHQAAA1tAGEAaQBsAEMAQwAACXMA
bQB0AHAAAAAAAMBlRPZ+2mdJlVRWUoZ895MABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEO
DgUgAQERRQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgMkF
IAASgM0HIAIBDhKAzQQAARwcBAABARxAByISgJUSgJUSgJUSgJUSgJkSgJkSgJkSgJ0SgJ0SgJ0S
gJ0ICAgODg4ODggIDhGAoQgIDggIDggIDhKApRKAqQUgABKA2QUgABKAqQYgARKA3RwDIAAcByAC
CBKAnRwFIAASgOEDIAAIBSAAEoDlBiABARKAnQIGDgMgAA4GAAMODg4OBiABEoCdCAUAAg4ODgQA
AQ4ICwAGDg4ODggIEYD5BgABARKApQUgABKBAQggAgEOEBKAqQQgAQEcBSAAEoEFCCAFAggODg4I
AwAAAQYgARKArQ4LBwMSgK0SgLESgLUFIAASgQkFIAASgLEHIAISgK0OHAMgAAINBwUSgK0SgLES
gLkICAQgARwIDAcGEoC9Dg4ODhKAwQUAABKBGQYgAQESgR0FIAASgSEGIAEBEoC9BCABAhwEBwEe
AAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAI
t3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIk
ARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggDBhEoBAAAEgwEAAASCAQAABJlBAAAEiAEAAAS
eQQAABJ9BQABARJ9BAAAEhgGIAEOEoCdBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQI
ABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMWU1OTZhZjRkZjJkNDg0MmJkYTQ1Y2RkNTMyNTMw
ODkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEAJGEyMjY5NjdjLTA0MzEt
NGQ2Zi1hMDI3LTEyYzUzYmQyMjE0NQAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41CAEA
AQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlBy
b3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3Nl
X19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdN
eS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPhLAAAAAAAAAAAAABJM
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAETAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAA
AAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEAZQA1
ADkANgBhAGYANABkAGYAMgBkADQAOAA0ADIAYgBkAGEANAA1AGMAZABkADUAMwAyADUAMwAwADgA
OQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMQBlADUAOQA2AGEAZgA0AGQAZgAyAGQA
NAA4ADQAMgBiAGQAYQA0ADUAYwBkAGQANQAzADIANQAzADAAOAA5AC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAxAGUANQA5ADYAYQBmADQA
ZABmADIAZAA0ADgANAAyAGIAZABhADQANQBjAGQAZAA1ADMAMgA1ADMAMAA4ADkALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMQBlADUAOQA2AGEAZgA0AGQA
ZgAyAGQANAA4ADQAMgBiAGQAYQA0ADUAYwBkAGQANQAzADIANQAzADAAOAA5AAAANAAIAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAkPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FD524A3C-5CA5-423B-B203-2164F378271A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="select 'DEV ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'TST ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHT01\DWHTST].DWH_Control.Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'ACC ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHA01\DWHACC].DWH_Control.Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'PRD ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHP01\DWHPRD].DWH_Control.Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::stagingResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{51921699-4AEC-434A-B720-03E2BB85DF7C}"
      DTS:From="Package\Staging result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DWH result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F93E1A2D-F68C-4852-96BA-C4313D77860C}"
      DTS:From="Package\DWH result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\ODS result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{86315E72-39B2-4760-B10B-17C59AA0AD20}"
      DTS:From="Package\ETL result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Staging result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A9A2F031-8795-47AD-867B-6192C72B8F72}"
      DTS:From="Package\ODS result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42"
          Id="Package\DWH result"
          TopLeft="75,208" />
        <NodeLayout
          Size="126,42"
          Id="Package\ETL result"
          TopLeft="94,14" />
        <NodeLayout
          Size="129,42"
          Id="Package\ODS result"
          TopLeft="91,302" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="87,405" />
        <NodeLayout
          Size="172,42"
          Id="Package\Staging result"
          TopLeft="74,103" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="160.5,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="158.25,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.5,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="154,344">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>