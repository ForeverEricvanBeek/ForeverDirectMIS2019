<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/3/2019 7:08:05 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FDONB044"
  DTS:CreatorName="FOREVERDIRECT\beek"
  DTS:DTSID="{02C50274-7EFB-4EC9-BBA0-6905BA979414}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1900.78"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="62"
  DTS:VersionGUID="{BBA0141A-1346-4D63-9B07-B8E43CD461FA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWH_Control_Package]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
      DTS:ObjectName="DWH_Control_Package">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=FDODWHD01\DWHDEV;Initial Catalog=DWH_Control;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B78E459D-C1A4-4FEE-8BA8-A6173134334B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwhResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B465FCFE-8A59-46CB-9BEB-401133410883}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="etlResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{771D61D2-CDD6-48AB-9E8E-E1F7B88404AA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ifsResult">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2EEF33B3-BB6F-4023-B9DB-ACC2116230D1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;ETL Status update on &quot; +  (DT_WSTR, 2)  DAY( GETDATE()  ) + &quot;-&quot; +   (DT_WSTR, 2)MONTH( GETDATE()  ) + &quot;-&quot; +   (DT_WSTR, 4)YEAR( GETDATE()  )"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailBody">
      <DTS:VariableValue
        DTS:DataType="8">ETL Status update on 18-2-2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9607012-403B-45A9-BE44-83D17781DBF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailCC">
      <DTS:VariableValue
        DTS:DataType="8">technicalit@foreverdirect.eu,bi@foreverdirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{394D2D47-937A-40CB-8864-FF9FEBA3274B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFrom">
      <DTS:VariableValue
        DTS:DataType="8">ETL@ForeverDirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{905564C3-F068-47D8-9C1E-D2B7F097B00B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BI Logging&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailSubject">
      <DTS:VariableValue
        DTS:DataType="8">BI Logging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFB5AA2C-6A2D-440C-9485-A7498AEE6ED2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailTo">
      <DTS:VariableValue
        DTS:DataType="8">onno.vanduivenbode@foreverdirect.eu,Rijn.vanDommele@foreverdirect.eu,ericvanbeek@foreverdirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FD0ABE5-443D-41C0-92BE-20C2B823556F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="odsResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F5BA222-DE09-4BEE-830C-537F26AC6EDE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ScriptTaskErrorMsg">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60466D58-8611-42D8-B373-D5E4046B8306}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="smtp">
      <DTS:VariableValue
        DTS:DataType="8">FDXEXMP01.foreverdirect.local</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D7AF39E-5590-4627-A152-DDE9E09BB154}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="stagingResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DWH result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{38AD79E1-45EF-4CB7-8799-8C15F1F5ED23}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DWH result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="select 'DEV ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'TST ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from [FDODWHT01\DWHTST].DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'ACC ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from [FDODWHA01\DWHACC].DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'PRD ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'DWH loaded' ELSE 'Staging DWH ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS DWH from [FDODWHP01\DWHPRD].DWH_Control.Control.JobControl where Source = 'DWH' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::dwhResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8491052A-DC1E-4875-93D2-84D63D07B616}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="&#xA;WITH CTE_DEV AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;1 AS EnvironmentSort&#xA;&#x9;&#x9;, 'DEV' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_TST AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;2 AS EnvironmentSort&#xA;&#x9;&#x9;, 'TST' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_ACC AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;3 AS EnvironmentSort&#xA;&#x9;&#x9;, 'ACC' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_PRD AS (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;4 AS EnvironmentSort&#xA;&#x9;&#x9;, 'PRD' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;)&#xA;&#xA;SELECT&#xA;  X.[Environment]&#xA;  , X.[Source]&#xA;  , X.[Type]&#xA;  , X.[Start]&#xA;  , X.[End]&#xA;  , X.[Minutes]&#xA;FROM (&#xA;SELECT * FROM CTE_DEV&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 2, '', '', '', '', '', ''&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_TST&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 3, '', '', '', '', '', ''&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_ACC&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 4, '', '', '', '', '', ''&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_PRD&#xA;) X&#xA;ORDER BY&#xA;  X.EnvironmentSort&#xA;  , X.Source&#xA;  , X.Type"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::etlResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\IFS results"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{713f86e3-7635-4493-b5ed-b54553fadb38}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="IFS results"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource=" SELECT&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN (SELECT (case when count(distinct Sourcesystem) = 1 then 1 else 0 end) FROM [FDODWHP01\DWHIFS].DWI_Control.Control.JobControl where Source = 'PROD' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0)) = 1 THEN&#xA;&#x9;&#x9;(SELECT 'IFS Data load done on ' + CONVERT(nvarchar(50),[Date],126) AS String FROM [FDODWHP01\DWHIFS].DWI_Control.Control.JobControl where Source = 'PROD' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0))&#xA;&#x9;&#x9;ELSE 'IFS Data load has errors'&#xA;&#x9;&#x9;END AS IFS"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ifsResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ODS result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4ee5af3e-06c3-4f86-8393-5eb162883322}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ODS result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="&#xA;select 'DEV ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS ODS from Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) &#xA;UNION ALL&#xA;select 'TST ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS ODS from [FDODWHT01\DWHTST].DWH_Control.Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) &#xA;UNION ALL&#xA;select 'ACC ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS ODS from [FDODWHA01\DWHACC].DWH_Control.Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) &#xA;UNION ALL&#xA;select 'PRD ' + CASE WHEN COUNT(distinct Sourcesystem) = 1 THEN 'ODS loaded' ELSE 'ODS busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS ODS from [FDODWHP01\DWHPRD].DWH_Control.Control.JobControl where Source = 'ODS' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0)&#xA;&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::odsResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{AD4DB696-2F7D-4780-931F-43D373A4D94C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1e596af4df2d4842bda45cdd53253089"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::dwhResult,User::etlResult,User::ifsResult,User::mailBody,User::mailCC,User::mailFrom,User::mailSubject,User::mailTo,User::odsResult,User::ScriptTaskErrorMsg,User::smtp,User::stagingResult">
          <ProjectItem
            Name="ST_1e596af4df2d4842bda45cdd53253089.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3f3ba971-b512-4dc9-8260-3afe875e92c0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_1e596af4df2d4842bda45cdd53253089</RootNamespace>
    <AssemblyName>ST_1e596af4df2d4842bda45cdd53253089</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_1e596af4df2d4842bda45cdd53253089")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_1e596af4df2d4842bda45cdd53253089")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a226967c-0431-4d6f-a027-12c53bd22145")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1e596af4df2d4842bda45cdd53253089</msb:CodeName>
		<msb:DisplayName>ST_1e596af4df2d4842bda45cdd53253089</msb:DisplayName>
		<msb:ProjectId>{148998E5-23CB-4BAC-B6B3-536F9FBD477A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1e596af4df2d4842bda45cdd53253089.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Data.SqlClient
Imports System.Net.Mail
Imports System.Net
Imports System.Collections.Generic
Imports System.Data.OleDb
Imports System.Text
Imports System.Text.RegularExpressions
Imports System.IO

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    Dim message As String

    Public Sub Main()
        Try
            '' Create a new dataset to store data tables
            Dim ds1, ds2, ds3, ds4 As New DataSet
            Dim oleDA1, oleDA2, oleDA3, oleDA4 As New OleDbDataAdapter
            Dim dt1, dt2, dt3, dt4 As New DataTable
            oleDA1.Fill(dt1, Dts.Variables("etlResult").Value)
            oleDA2.Fill(dt2, Dts.Variables("stagingResult").Value)
            oleDA3.Fill(dt3, Dts.Variables("dwhResult").Value)
            oleDA4.Fill(dt4, Dts.Variables("odsResult").Value)

            '' If data tables have rows then add it to the data set
            If dt1 IsNot Nothing AndAlso dt1.Rows.Count > 0 Then
                ds1.Tables.Add(dt1)
            End If

            If dt2 IsNot Nothing AndAlso dt2.Rows.Count > 0 Then
                ds2.Tables.Add(dt2)
            End If

            If dt3 IsNot Nothing AndAlso dt3.Rows.Count > 0 Then
                ds3.Tables.Add(dt3)
            End If

            If dt4 IsNot Nothing AndAlso dt4.Rows.Count > 0 Then
                ds4.Tables.Add(dt4)
            End If

            '' Count the number of tables in the data set
            Dim dsCount1 As Integer = ds1.Tables.Count
            Dim dsCount2 As Integer = ds2.Tables.Count
            Dim dsCount3 As Integer = ds3.Tables.Count
            Dim dsCount4 As Integer = ds4.Tables.Count
            Dim str As String = String.Empty
            Dim result As String = Dts.Variables("mailBody").Value.ToString()
            Dim ifsResult As String = Dts.Variables("ifsResult").Value.ToString()
            Dim strBody As String = "<html><body style='font-family: Arial, Helvetica, sans-serif;font-size: 12px;'>" & result.ToString & "<br><br>" & ifsResult.ToString & "<br><br>"
            Dim strBodyEnd As String = "</body></html>"

            str += "&nbsp;<p>"

            '' The following code captures the results of datatables and buils an html string to dispose as an email
            For x As Integer = 0 To dsCount2 - 1
                If ds2.Tables(x) IsNot Nothing AndAlso ds2.Tables(x).Rows.Count > 0 Then
                    Dim strText2 As String = DataTableToHTMLTable(ds2.Tables(x))
                    If x = 0 Then
                        str += strText2.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText2.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount3 - 1
                If ds3.Tables(x) IsNot Nothing AndAlso ds3.Tables(x).Rows.Count > 0 Then
                    Dim strText3 As String = DataTableToHTMLTable(ds3.Tables(x))
                    If x = 0 Then
                        str += strText3.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText3.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount4 - 1
                If ds4.Tables(x) IsNot Nothing AndAlso ds4.Tables(x).Rows.Count > 0 Then
                    Dim strText4 As String = DataTableToHTMLTable(ds4.Tables(x))
                    If x = 0 Then
                        str += strText4.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText4.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount1 - 1
                If ds1.Tables(x) IsNot Nothing AndAlso ds1.Tables(x).Rows.Count > 0 Then
                    Dim strText1 As String = DataTableToHTMLTable(ds1.Tables(x))
                    If x = 0 Then
                        str += strText1.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText1.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            Dim msg As String = str.ToString
            message = strBody & msg & strBodyEnd
            Mail()   'only email if not empty recordset
            Dts.TaskResult = ScriptResults.Success
        Catch e As Exception
            Dim LockedVariable As Variables = Nothing
            Dts.VariableDispenser.LockOneForWrite("User::ScriptTaskErrorMsg", LockedVariable)
            LockedVariable("User::ScriptTaskErrorMsg").Value = "Error Description: " + e.Message.ToString()
            LockedVariable.Unlock()
            Dts.Events.FireError(0, "Script Task", "Error", String.Empty, 0)
            Dts.TaskResult = ScriptResults.Failure
        End Try
    End Sub

    Public Function DataTableToHTMLTable(ByVal inTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<style scoped>.myTable { background-color:#f4f4f4; width:900px;font-family: Arial, Helvetica, sans-serif;font-size: 12px;}.myTable th { background-color:#f4f4f4;color:black;text-align:left; }.myTable td, .myTable th { padding:0px;border:0px solid #000000; }</style>")
        dString.Append("<table class=myTable> ")
        dString.Append(GetHeader(inTable))
        dString.Append(GetBody(inTable))
        dString.Append("</table>")
        Return dString.ToString
    End Function

    Private Function GetHeader(ByVal dTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<thead><tr>")
        For Each dColumn As DataColumn In dTable.Columns
            dString.AppendFormat("<th>{0}</th>", dColumn.ColumnName)
        Next
        dString.Append("</tr></thead>")
        Return dString.ToString
    End Function

    Private Function GetBody(ByVal dTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<tbody>")
        For Each dRow As DataRow In dTable.Rows
            dString.Append("<tr>")
            For dCount As Integer = 0 To dTable.Columns.Count - 1
                dString.AppendFormat("<td>{0}</td>", dRow(dCount))
            Next
            dString.Append("</tr>")
        Next
        dString.Append("</tbody>")
        Return dString.ToString()
    End Function

    Public Sub Mail()
        ''Variable Declaration
        Dim Mail As MailMessage
        Dim Client As SmtpClient
        Dim EmailFrom As String = Dts.Variables("mailFrom").Value.ToString()
        Dim EmailTo As String = Dts.Variables("mailTo").Value.ToString()
        Dim EmailSubject As String = Dts.Variables("mailSubject").Value.ToString()
        Dim EmailCc As String = Dts.Variables("mailCC").Value.ToString()
        Dim From As New MailAddress(EmailFrom.ToString)
        Mail = New MailMessage(From.ToString, EmailTo.ToString, EmailSubject.ToString, message)
        Client = New SmtpClient(Dts.Variables("smtp").Value.ToString())
        Client.Credentials = CredentialCache.DefaultNetworkCredentials

        Mail.IsBodyHtml = True
        Mail.CC.Add(EmailCc)
        Client.Send(Mail)
    End Sub

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_1e596af4df2d4842bda45cdd53253089.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGJBRl4AAAAAAAAAAOAAIiALAVAAAC4AAAAIAAAAAAAA1kwA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIRMAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3CwAAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4
TAAAAAAAAEgAAAACAAUAICsAAKwgAAABAAAAAAAAAMxLAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswCAAsBgAAAQAAEXMrAAAKCnMr
AAAKC3MrAAAKDHMrAAAKDXMsAAAKEwRzLAAAChMFcywAAAoTBnMsAAAKcy0AAAoTB3MtAAAKEwhz
LQAAChMJcy0AAAoTChEEEQcCKC4AAApvLwAACnIzAABwbzAAAApvMQAACigmAAAKbzIAAAomEQUR
CAIoLgAACm8vAAAKckcAAHBvMAAACm8xAAAKKCYAAApvMgAACiYRBhEJAiguAAAKby8AAApyYwAA
cG8wAAAKbzEAAAooJgAACm8yAAAKJhEKAiguAAAKby8AAApydwAAcG8wAAAKbzEAAAooJgAACm8y
AAAKJhEHLBwRB28zAAAKbzQAAAoWMQ0GbzUAAAoRB282AAAKEQgsHBEIbzMAAApvNAAAChYxDQdv
NQAAChEIbzYAAAoRCSwcEQlvMwAACm80AAAKFjENCG81AAAKEQlvNgAAChEKLBwRCm8zAAAKbzQA
AAoWMQ0JbzUAAAoRCm82AAAKBm81AAAKbzcAAAoTCwdvNQAACm83AAAKEwwIbzUAAApvNwAAChMN
CW81AAAKbzcAAAoTDn44AAAKEw8CKC4AAApvLwAACnKLAABwbzAAAApvMQAACm85AAAKExACKC4A
AApvLwAACnKdAABwbzAAAApvMQAACm85AAAKExEbjTsAAAElFnKxAABwoiUXERBvOgAACqIlGHJS
AQBwoiUZERFvOgAACqIlGnJSAQBwoig7AAAKExJyZAEAcBMTEQ9yggEAcCg8AAAKEw8RDBfaExUW
ExY4rQAAAAdvNQAAChEWbz0AAAosfwdvNQAAChEWbz0AAApvMwAACm80AAAKFjFlAgdvNQAAChEW
bz0AAAooEQAABhMXERYtEhEPERdvOgAACig8AAAKEw8rUxEWFjFOEQ9ylgEAcBEXbzoAAApyoAEA
cHKgAQBwERYoPgAACig8AAAKFxUWKD8AAAooQAAAChMPKxkRDxYTGBIY/hYoAAABb0EAAAooPAAA
ChMPERYX1hMWERYRFT5K////EQ9yggEAcCg8AAAKEw8RDRfaExkWExo4rQAAAAhvNQAAChEabz0A
AAosfwhvNQAAChEabz0AAApvMwAACm80AAAKFjFlAghvNQAAChEabz0AAAooEQAABhMbERotEhEP
ERtvOgAACig8AAAKEw8rUxEaFjFOEQ9ylgEAcBEbbzoAAApyoAEAcHKgAQBwERooPgAACig8AAAK
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
oSoAAAAAxgJ9BesABgCsKgAAAAARAJQAfgIGAMwqAAAAAAEAgACGAgcAuiAAAAAABhjxCAYACADY
KgAAAAADCC0BSgAIAAwrAAAAAAYY8QgGAAgAAAABAEwFAAABAKgBAAABAKEBAAABAKEBAAABAJEH
AAABAD0BAAABAD0BCQDxCAEAEQDxCAYAGQDxCAoAKQDxCBAAMQDxCBAAOQDxCBAAQQDxCBAASQDx
CBAAUQDxCBAAWQDxCBUAYQDxCBUAaQDxCBAAcQDxCBAAeQDxCBAAgQDxCBoAkQDxCCAAqQDxCAYA
sQDxCAYAuQDxCAYA0QDxCCYA6QDxCBAACQHxCAYAEQHxCAYAmQDxCAYAoQDxCAYADADxCAYAFADx
CAYAHADxCAYAJADxCAYADAAtAUoAFAAtAUoAHAAtAUoAJAAtAUoAwQDxCAYA2QDXAU8A2QAvDFcA
8QDxCF0AoQFDBWUAAQHxCAYAqQFqCGoAqQGRC2oAGQHxCAYAKQHxCAYAMQHxCAYAOQHxCAYAGQEp
C7IAsQGFCrgAUQGKBr4AuQEvBcUAMQF2BskAOQFKC9EAwQG8C9cAKQF6CtsAyQH4AOEA0QG8C9cA
2QE8DOgAwQB9BesA2QF9BesA2QFTC+8A2QFTC/UAyQGKBvsA4QF9BQIB6QEWAQcB2QFTCxMBiQF9
BesAsQGWCwEA+QG9CBoBsQFUCCEBAQLUAicBSQFSAesAuQE5BTABUQGLBQYAsQE/CzUBCQKhCDsB
+QGrCEQBWQHxCAYAWQEBAUgBWQF9BesAOQHbClsB0QHZCGEBYQGwC8UAaQHpAesAWQFaC2cBYQHZ
C28BGQK3AgYAwQHZCGEBcQGKBoEBgQHxCBAAgQF9BesAeQHxCCYAIQLxCBAAKQK2CpMBIQKmCpkB
eQF7BhUAeQFYAKABQQL4ABAAIQL8AKYBwQDUCq0BwQBGAdcASQIeAboBNADuC9EBPAAvBUoAPAA5
BegBPADxCAYACAAwAAkCCAA0AA4CKQCrADgELgALALYCLgATAL8CLgAbAN4CLgAjAOcCLgArABAD
LgAzABADLgA7AOcCLgBDABYDLgBLABADLgBTAC0DLgBbABADLgBjADMDLgBrAF0DLgBzAGoDQACL
AA4CQACDALQDQwB7AL0DQwCDALQDSQCrAEkEYwB7AL0DYwCDALQDaQCrAF0EgACLAA4CgwCTAA4C
gwCbAA4CgwB7AL0DiQCrAGoEoACLAA4CqQCDAN4CwACLAA4CyQCDAN4C4ACLAA4C4wC7AA4C4wBT
ABAD6QCzAA4CAwGDALQDAwGjANYDIwGDALQDIwFbABADoAKDALQDoAKLAA4CwAKDALQDwAKLAA4C
4AKDALQD4AKLAA4CAAODALQDAAOLAA4CIAOLAA4CQAOLAA4CYAOLAA4CYAODALQDgAOLAA4CoAOL
AA4CoAODALQDbwBPAXMBhgGyAcUBBAABAAUABQAGAAcACQAIAAAAkAiOAgAA5AaTAgAATwiYAgAA
SQmdAgAADwiiAgAAUAKnAgAATAWsAgAAMQGxAgIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQAL
AAIACgANAAEACwANAAIADgAPAAIAHAARAC4ANQA8AEMAtwHKAdkB4AEEgAAAAQAAAAAAAAAAAAAA
AAArAAAABAAAAAAAAAAAAAAA7gHZAAAAAAAEAAAAAAAAAAAAAADuAZMGAAAAAAoAAAAAAAAAAAAA
APcB4gAAAAAADQAAAAAAAAAAAAAAAAKSBQAAAAAEAAAAAAAAAAAAAADuAa8AAAAAAA0AAAAAAAAA
AAAAAAACXwAAAAAAAAAAAAEAAAAzCgAACAAEAAkABAAKAAcAAAAQABIAfgAAABAAMwB+AAAAAAA1
AH4AyQDAAckA4wEAAAAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAx
AFNUXzFlNTk2YWY0ZGYyZDQ4NDJiZGE0NWNkZDUzMjUzMDg5ADxNb2R1bGU+AGdldF9DQwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9f
SW5zdGFuY2VfXwB2YWx1ZV9fAFN5c3RlbS5EYXRhAFByb2plY3REYXRhAFN5c3RlbS5EYXRhLk9s
ZURiAG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBBZGQAU2VuZABBcHBlbmQAQ29tcGFy
ZU1ldGhvZABSZXBsYWNlAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBH
ZXRIYXNoQ29kZQBnZXRfTWVzc2FnZQBNYWlsTWVzc2FnZQBtZXNzYWdlAENyZWRlbnRpYWxDYWNo
ZQBEYXRhVGFibGVUb0hUTUxUYWJsZQBEYXRhVGFibGUAZFRhYmxlAGluVGFibGUAVmFyaWFibGUA
SURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0NvbHVt
bk5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBHZXRUeXBlAFZhcmlhbnRUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFz
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExv
Y2tPbmVGb3JXcml0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRl
ZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUA
TXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2Jq
ZWN0VmFsdWUAU3lzdGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3Ry
aW5nAE1hdGgAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU1RfMWU1OTZhZjRkZjJkNDg0MmJkYTQ1
Y2RkNTMyNTMwODkuZGxsAEZpbGwAc2V0X0lzQm9keUh0bWwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0A
U3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AZ2V0X0Fw
cGxpY2F0aW9uAE15QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YVRhYmxlQ29sbGVjdGlvbgBEYXRhQ29sdW1u
Q29sbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARXhjZXB0
aW9uAEN1bHR1cmVJbmZvAEdldEhlYWRlcgBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVj
dFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQ
cm92aWRlcgBTdHJpbmdCdWlsZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20u
Q29tcGlsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfVXNlcgBnZXRfVmFyaWFibGVEaXNwZW5z
ZXIARW50ZXIAT2xlRGJEYXRhQWRhcHRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdy
AEZpcmVFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IASUVudW1lcmF0b3IA
R2V0RW51bWVyYXRvcgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdl
YlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3Rl
bS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U1RfMWU1OTZhZjRkZjJkNDg0MmJkYTQ1Y2RkNTMyNTMwODkuTXkuUmVzb3VyY2VzAE15UmVzb3Vy
Y2VzAFNUXzFlNTk2YWY0ZGYyZDQ4NDJiZGE0NWNkZDUzMjUzMDg5LlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAFN0cmluZ3MATXlTZXR0
aW5ncwBzZXRfQ3JlZGVudGlhbHMAZ2V0X0RlZmF1bHROZXR3b3JrQ3JlZGVudGlhbHMARXF1YWxz
AGdldF9Db2x1bW5zAENvbnZlcnNpb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBSdW50aW1lSGVscGVy
cwBTdWNjZXNzAE1haWxBZGRyZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAGdl
dF9Sb3dzAENvbmNhdABBcHBlbmRGb3JtYXQAbV9TeW5jT2JqZWN0AE15UHJvamVjdABTeXN0ZW0u
TmV0AERhdGFTZXQARXhpdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AGdldF9DdXJyZW50AGdl
dF9Db3VudABJQ3JlZGVudGlhbHNCeUhvc3QATW92ZU5leHQAU3lzdGVtLlRleHQAbV9Db250ZXh0
AERhdGFSb3cAU1RfMWU1OTZhZjRkZjJkNDg0MmJkYTQ1Y2RkNTMyNTMwODkuTXkAR2V0Qm9keQBn
ZXRfQXNzZW1ibHkARW1wdHkAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBz
AG8AdQByAGMAZQBzAAATZQB0AGwAUgBlAHMAdQBsAHQAABtzAHQAYQBnAGkAbgBnAFIAZQBzAHUA
bAB0AAATZAB3AGgAUgBlAHMAdQBsAHQAABNvAGQAcwBSAGUAcwB1AGwAdAAAEW0AYQBpAGwAQgBv
AGQAeQAAE2kAZgBzAFIAZQBzAHUAbAB0AACAnzwAaAB0AG0AbAA+ADwAYgBvAGQAeQAgAHMAdAB5
AGwAZQA9ACcAZgBvAG4AdAAtAGYAYQBtAGkAbAB5ADoAIABBAHIAaQBhAGwALAAgAEgAZQBsAHYA
ZQB0AGkAYwBhACwAIABzAGEAbgBzAC0AcwBlAHIAaQBmADsAZgBvAG4AdAAtAHMAaQB6AGUAOgAg
ADEAMgBwAHgAOwAnAD4AARE8AGIAcgA+ADwAYgByAD4AAB08AC8AYgBvAGQAeQA+ADwALwBoAHQA
bQBsAD4AABMmAG4AYgBzAHAAOwA8AHAAPgAACTwAYgByAD4AACFRAHUAZQByAHkAIABSAGUAcwB1
AGwAdAAgAFMAZQB0AAAxVQBzAGUAcgA6ADoAUwBjAHIAaQBwAHQAVABhAHMAawBFAHIAcgBvAHIA
TQBzAGcAACdFAHIAcgBvAHIAIABEAGUAcwBjAHIAaQBwAHQAaQBvAG4AOgAgAAAXUwBjAHIAaQBw
AHQAIABUAGEAcwBrAAALRQByAHIAbwByAACCEzwAcwB0AHkAbABlACAAcwBjAG8AcABlAGQAPgAu
AG0AeQBUAGEAYgBsAGUAIAB7ACAAYgBhAGMAawBnAHIAbwB1AG4AZAAtAGMAbwBsAG8AcgA6ACMA
ZgA0AGYANABmADQAOwAgAHcAaQBkAHQAaAA6ADkAMAAwAHAAeAA7AGYAbwBuAHQALQBmAGEAbQBp
AGwAeQA6ACAAQQByAGkAYQBsACwAIABIAGUAbAB2AGUAdABpAGMAYQAsACAAcwBhAG4AcwAtAHMA
ZQByAGkAZgA7AGYAbwBuAHQALQBzAGkAegBlADoAIAAxADIAcAB4ADsAfQAuAG0AeQBUAGEAYgBs
AGUAIAB0AGgAIAB7ACAAYgBhAGMAawBnAHIAbwB1AG4AZAAtAGMAbwBsAG8AcgA6ACMAZgA0AGYA
NABmADQAOwBjAG8AbABvAHIAOgBiAGwAYQBjAGsAOwB0AGUAeAB0AC0AYQBsAGkAZwBuADoAbABl
AGYAdAA7ACAAfQAuAG0AeQBUAGEAYgBsAGUAIAB0AGQALAAgAC4AbQB5AFQAYQBiAGwAZQAgAHQA
aAAgAHsAIABwAGEAZABkAGkAbgBnADoAMABwAHgAOwBiAG8AcgBkAGUAcgA6ADAAcAB4ACAAcwBv
AGwAaQBkACAAIwAwADAAMAAwADAAMAA7ACAAfQA8AC8AcwB0AHkAbABlAD4AAS08AHQAYQBiAGwA
ZQAgAGMAbABhAHMAcwA9AG0AeQBUAGEAYgBsAGUAPgAgAAARPAAvAHQAYQBiAGwAZQA+AAAXPAB0
AGgAZQBhAGQAPgA8AHQAcgA+AAAZPAB0AGgAPgB7ADAAfQA8AC8AdABoAD4AABs8AC8AdAByAD4A
PAAvAHQAaABlAGEAZAA+AAAPPAB0AGIAbwBkAHkAPgAACTwAdAByAD4AABk8AHQAZAA+AHsAMAB9
ADwALwB0AGQAPgAACzwALwB0AHIAPgAAETwALwB0AGIAbwBkAHkAPgAAEW0AYQBpAGwARgByAG8A
bQAADW0AYQBpAGwAVABvAAAXbQBhAGkAbABTAHUAYgBqAGUAYwB0AAANbQBhAGkAbABDAEMAAAlz
AG0AdABwAAAAAACqQw9WpDbIS4jIQQUY5uC9AAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIB
Dg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYDJ
BSAAEoDNByACAQ4SgM0EAAEcHAQAAQEcQgckEoCVEoCVEoCVEoCVEoCZEoCZEoCZEoCdEoCdEoCd
EoCdCAgICA4ODg4ODggIDhGAoQgIDggIDggIDhKApRKAqQUgABKA2QUgABKAqQYgARKA3RwDIAAc
ByACCBKAnRwFIAASgOEDIAAIBSAAEoDlBiABARKAnQIGDgMgAA4FAAEOHQ4FAAIODg4GIAESgJ0I
BAABDggLAAYODg4OCAgRgPkGAAMODg4OBgABARKApQUgABKBAQggAgEOEBKAqQQgAQEcBSAAEoEF
CCAFAggODg4IAwAAAQYgARKArQ4LBwMSgK0SgLESgLUFIAASgQkFIAASgLEHIAISgK0OHAMgAAIN
BwUSgK0SgLESgLkICAQgARwIDAcGEoC9Dg4ODhKAwQUAABKBGQYgAQESgR0FIAASgSEGIAEBEoC9
BCABAhwEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoB
EwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUS
JAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggDBhEoBAAAEgwEAAASCAQAABJl
BAAAEiAEAAASeQQAABJ9BQABARJ9BAAAEhgGIAEOEoCdBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgA
EgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMWU1OTZhZjRkZjJkNDg0MmJkYTQ1
Y2RkNTMyNTMwODkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEAJGEyMjY5
NjdjLTA0MzEtNGQ2Zi1hMDI3LTEyYzUzYmQyMjE0NQAADAEABzEuMC4wLjAAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC41CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNl
cnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2Vf
XxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRp
b24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKxMAAAA
AAAAAAAAAMZMAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4TAAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAA
AAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEAZQA1
ADkANgBhAGYANABkAGYAMgBkADQAOAA0ADIAYgBkAGEANAA1AGMAZABkADUAMwAyADUAMwAwADgA
OQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMQBlADUAOQA2AGEAZgA0AGQAZgAyAGQA
NAA4ADQAMgBiAGQAYQA0ADUAYwBkAGQANQAzADIANQAzADAAOAA5AC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAxAGUANQA5ADYAYQBmADQA
ZABmADIAZAA0ADgANAAyAGIAZABhADQANQBjAGQAZAA1ADMAMgA1ADMAMAA4ADkALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMQBlADUAOQA2AGEAZgA0AGQA
ZgAyAGQANAA4ADQAMgBiAGQAYQA0ADUAYwBkAGQANQAzADIANQAzADAAOAA5AAAANAAIAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADYPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FD524A3C-5CA5-423B-B203-2164F378271A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="select 'DEV ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'TST ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHT01\DWHTST].DWH_Control.Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'ACC ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHA01\DWHACC].DWH_Control.Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;UNION ALL&#xA;select 'PRD ' + CASE WHEN COUNT(distinct Sourcesystem) = 12 THEN 'Staging loaded' ELSE 'Staging busy ' + CAST(COUNT(distinct Sourcesystem) AS VARCHAR(10)) + ' loaded' END AS Staging from [FDODWHP01\DWHPRD].DWH_Control.Control.JobControl where Source = 'Staging' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) --11&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::stagingResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{51921699-4AEC-434A-B720-03E2BB85DF7C}"
      DTS:From="Package\Staging result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DWH result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F93E1A2D-F68C-4852-96BA-C4313D77860C}"
      DTS:From="Package\DWH result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\ODS result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{86315E72-39B2-4760-B10B-17C59AA0AD20}"
      DTS:From="Package\ETL result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Staging result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{4BF933D0-C4C2-4DA5-9CED-9A7C78CDDEA4}"
      DTS:From="Package\ODS result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\IFS results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{D8557A57-CBC6-4F1A-B475-C9DA31B7F1DD}"
      DTS:From="Package\IFS results"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42"
          Id="Package\DWH result"
          TopLeft="75,208" />
        <NodeLayout
          Size="126,42"
          Id="Package\ETL result"
          TopLeft="94,14" />
        <NodeLayout
          Size="129,42"
          Id="Package\IFS results"
          TopLeft="75,384" />
        <NodeLayout
          Size="129,42"
          Id="Package\ODS result"
          TopLeft="91,302" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="88,472" />
        <NodeLayout
          Size="172,42"
          Id="Package\Staging result"
          TopLeft="74,103" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="160.5,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="158.25,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.5,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="155.5,344">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16,40"
              Start="0,0"
              End="-16,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16"
                    Point2="0,20"
                    Point3="-4,20" />
                  <mssgle:LineSegment
                    End="-12,20" />
                  <mssgle:CubicBezierSegment
                    Point1="-12,20"
                    Point2="-16,20"
                    Point3="-16,24" />
                  <mssgle:LineSegment
                    End="-16,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="139.5,426">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14,46"
              Start="0,0"
              End="14,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="4,23" />
                  <mssgle:LineSegment
                    End="10,23" />
                  <mssgle:CubicBezierSegment
                    Point1="10,23"
                    Point2="14,23"
                    Point3="14,27" />
                  <mssgle:LineSegment
                    End="14,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>