<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/3/2019 7:08:05 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FDONB044"
  DTS:CreatorName="FOREVERDIRECT\beek"
  DTS:DTSID="{02C50274-7EFB-4EC9-BBA0-6905BA979414}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1900.78"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="70"
  DTS:VersionGUID="{A0387272-71EA-484F-B045-A7F4B90F8EFA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWH_Control_Package]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
      DTS:ObjectName="DWH_Control_Package">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=FDODWHD01\DWHDEV;Initial Catalog=DWH_Control;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B78E459D-C1A4-4FEE-8BA8-A6173134334B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwhResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{778F5BAB-06BD-45F2-96AF-803751921C6A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="errorResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B465FCFE-8A59-46CB-9BEB-401133410883}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="etlResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{771D61D2-CDD6-48AB-9E8E-E1F7B88404AA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ifsResult">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2EEF33B3-BB6F-4023-B9DB-ACC2116230D1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;ETL Status update on &quot; +  (DT_WSTR, 2)  DAY( GETDATE()  ) + &quot;-&quot; +   (DT_WSTR, 2)MONTH( GETDATE()  ) + &quot;-&quot; +   (DT_WSTR, 4)YEAR( GETDATE()  )"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailBody">
      <DTS:VariableValue
        DTS:DataType="8">ETL Status update on 2-4-2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9607012-403B-45A9-BE44-83D17781DBF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailCC">
      <DTS:VariableValue
        DTS:DataType="8">technicalit@foreverdirect.eu,bi@foreverdirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{394D2D47-937A-40CB-8864-FF9FEBA3274B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFrom">
      <DTS:VariableValue
        DTS:DataType="8">ETL@ForeverDirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{905564C3-F068-47D8-9C1E-D2B7F097B00B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BI Logging&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailSubject">
      <DTS:VariableValue
        DTS:DataType="8">BI Logging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFB5AA2C-6A2D-440C-9485-A7498AEE6ED2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailTo">
      <DTS:VariableValue
        DTS:DataType="8">onno.vanduivenbode@foreverdirect.eu,Rijn.vanDommele@foreverdirect.eu,ericvanbeek@foreverdirect.eu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FD0ABE5-443D-41C0-92BE-20C2B823556F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="odsResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F5BA222-DE09-4BEE-830C-537F26AC6EDE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ScriptTaskErrorMsg">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60466D58-8611-42D8-B373-D5E4046B8306}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="smtp">
      <DTS:VariableValue
        DTS:DataType="8">FDXEXMP01.foreverdirect.local</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D7AF39E-5590-4627-A152-DDE9E09BB154}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="stagingResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DWH result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{38AD79E1-45EF-4CB7-8799-8C15F1F5ED23}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DWH result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="SELECT 'DEV ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'DWH loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'DWH busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS DWH FROM Logging.ProcessLog WHERE PackageName LIKE '%DWH%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'TST ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'DWH loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'DWH busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS DWH FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%DWH%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'ACC ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'DWH loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'DWH busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS DWH FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%DWH%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'PRD ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'DWH loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'DWH busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS DWH FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%DWH%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::dwhResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Error results"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5566d7ee-b54e-49b2-83f7-bb2474274c1b}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Error results"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="WITH CTE_DEV AS (&#xA;&#x9;SELECT 1 AS EnvironmentSort, 'DEV' AS Environment, EventDescription FROM Logging.ProcessMessageLog WHERE LogDateTime &gt;= CAST(GETDATE() AS DATE) AND LogDateTime &lt; CAST(GETDATE()+1 AS DATE) GROUP BY EventDescription&#xA;), CTE_TST AS ( &#xA;&#x9;SELECT 2 AS EnvironmentSort, 'TST' AS Environment, EventDescription FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog WHERE LogDateTime &gt;= CAST(GETDATE() AS DATE) AND LogDateTime &lt; CAST(GETDATE()+1 AS DATE) GROUP BY EventDescription&#xA;), CTE_ACC AS (&#xA;&#x9;SELECT 3 AS EnvironmentSort, 'ACC' AS Environment, EventDescription FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog WHERE LogDateTime &gt;= CAST(GETDATE() AS DATE) AND LogDateTime &lt; CAST(GETDATE()+1 AS DATE) GROUP BY EventDescription&#xA;), CTE_PRD AS (&#xA;&#x9;SELECT 4 AS EnvironmentSort, 'PRD' AS Environment, EventDescription FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog WHERE LogDateTime &gt;= CAST(GETDATE() AS DATE) AND LogDateTime &lt; CAST(GETDATE()+1 AS DATE) GROUP BY EventDescription&#xA;&#xA;)&#xA;&#xA;SELECT&#xA;  X.[Environment]&#xA;  , EventDescription&#xA;FROM (&#xA;SELECT * FROM CTE_DEV&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 2, '', ''&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_TST&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 3, '', ''&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_ACC&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 4, '', ''&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_PRD&#xA;) X&#xA;ORDER BY&#xA;  X.EnvironmentSort"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::errorResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8491052A-DC1E-4875-93D2-84D63D07B616}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="&#xA;WITH CTE_DEV AS (&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;1 AS EnvironmentSort&#xA;&#x9;&#x9;, 'DEV' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_TST AS (&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;2 AS EnvironmentSort&#xA;&#x9;&#x9;, 'TST' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_ACC AS (&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;3 AS EnvironmentSort&#xA;&#x9;&#x9;, 'ACC' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;), CTE_PRD AS (&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;4 AS EnvironmentSort&#xA;&#x9;&#x9;, 'PRD' AS Environment&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1,(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))+1))-1)-(CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))+1))))&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN SUBSTRING(T1.PackageName,CHARINDEX('-',T1.PackageName)+1,CHARINDEX('-',T1.PackageName, (CHARINDEX('-',T1.PackageName)+1))-CHARINDEX('-',T1.PackageName)-1)&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE T1.PackageName&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS Source&#xA;&#x9;&#x9;, CASE&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%Staging%' THEN 'Staging'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%DWH%' THEN 'DWH'&#xA;&#x9;&#x9;&#x9;WHEN T1.PackageName LIKE '%ODS%' THEN 'ODS'&#xA;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Type]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionStartDate, 113)&#x9;&#x9;&#x9;AS [Start]&#xA;&#x9;&#x9;&#x9; , CONVERT(VARCHAR(20), T1.ExecutionEndDate, 113)&#x9;&#x9;&#x9;AS [End]&#xA;&#x9;&#x9;, DATEDIFF(MINUTE,T1.ExecutionStartDate,T1.ExecutionEndDate)&#x9;AS [Minutes]&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful IS NULL&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9; T1.PackageName&#xA;&#x9;&#x9; , T1.IsSuccessful&#xA;&#x9;&#x9; , T1.ExecutionStartDate&#xA;&#x9;&#x9; , T1.ExecutionEndDate&#xA;&#x9;&#x9; , PM.EventDescription&#xA;&#x9;&#x9;FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog AS T1&#xA;&#x9;&#x9;LEFT JOIN [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessMessageLog AS PM ON PM.ProcessLogID = T1.ProcessLogID&#xA;&#x9;&#x9;WHERE T1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND T1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND T1.IsSuccessful = 1&#xA;&#x9;&#x9;AND T1.ProcessLogParentID IS NULL&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%ForeverData%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE '%Reports%'&#xA;&#x9;&#x9;AND&#x9;T1.PackageName NOT LIKE 'CL%'&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT P1.BatchID FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog P1 WHERE P1.ExecutionStartDate &gt;= cast(floor(cast(getdate() as float)) as datetime) AND P1.ExecutionStartDate &lt; cast(floor(cast(getdate()+1 as float)) as datetime)&#xA;&#x9;&#x9;AND P1.BatchID &gt; T1.BatchID AND P1.PackageName = T1.PackageName)&#xA;&#x9;) AS T1&#xA;)&#xA;&#xA;SELECT&#xA;  X.[Environment]&#xA;  , X.[Source]&#xA;  , X.[Type]&#xA;  , X.[Start]&#xA;  , X.[End]&#xA;  , X.[Minutes]&#xA;FROM (&#xA;SELECT * FROM CTE_DEV&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 2, '', '', '', '', '', ''&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_TST&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 3, '', '', '', '', '', ''&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_ACC&#xA;&#xA;UNION ALL&#xA;&#xA;SELECT 4, '', '', '', '', '', ''&#xA;UNION ALL&#xA;&#xA;SELECT * FROM CTE_PRD&#xA;) X&#xA;ORDER BY&#xA;  X.EnvironmentSort&#xA;  , X.Source&#xA;  , X.Type"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::etlResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\IFS results"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{713f86e3-7635-4493-b5ed-b54553fadb38}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="IFS results"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource=" SELECT&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN (SELECT (case when count(distinct Sourcesystem) = 1 then 1 else 0 end) FROM [FDODWHP01\DWHIFS].DWI_Control.Control.JobControl where Source = 'PROD' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0)) = 1 THEN&#xA;&#x9;&#x9;(SELECT 'IFS Data load done on ' + CONVERT(nvarchar(50),[Date],126) AS String FROM [FDODWHP01\DWHIFS].DWI_Control.Control.JobControl where Source = 'PROD' AND Date &gt;= DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0))&#xA;&#x9;&#x9;ELSE 'IFS Data load has errors'&#xA;&#x9;&#x9;END AS IFS"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ifsResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ODS result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4ee5af3e-06c3-4f86-8393-5eb162883322}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ODS result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="SELECT 'DEV ' + CASE WHEN COUNT(distinct PackageName) = 1 THEN 'ODS loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'ODS busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS ODS FROM Logging.ProcessLog WHERE PackageName LIKE '%ODS%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'TST ' + CASE WHEN COUNT(distinct PackageName) = 1 THEN 'ODS loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'ODS busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS ODS FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%ODS%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'ACC ' + CASE WHEN COUNT(distinct PackageName) = 1 THEN 'ODS loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'ODS busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS ODS FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%ODS%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'PRD ' + CASE WHEN COUNT(distinct PackageName) = 1 THEN 'ODS loaded on ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'ODS busy ' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS ODS FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%ODS%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::odsResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{AD4DB696-2F7D-4780-931F-43D373A4D94C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1e596af4df2d4842bda45cdd53253089"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::dwhResult,User::errorResult,User::etlResult,User::ifsResult,User::mailBody,User::mailCC,User::mailFrom,User::mailSubject,User::mailTo,User::odsResult,User::ScriptTaskErrorMsg,User::smtp,User::stagingResult">
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Data.SqlClient
Imports System.Net.Mail
Imports System.Net
Imports System.Collections.Generic
Imports System.Data.OleDb
Imports System.Text
Imports System.Text.RegularExpressions
Imports System.IO

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    Dim message As String

    Public Sub Main()
        Try
            '' Create a new dataset to store data tables
            Dim ds1, ds2, ds3, ds4, ds5 As New DataSet
            Dim oleDA1, oleDA2, oleDA3, oleDA4, oleDA5 As New OleDbDataAdapter
            Dim dt1, dt2, dt3, dt4, dt5 As New DataTable
            oleDA1.Fill(dt1, Dts.Variables("etlResult").Value)
            oleDA2.Fill(dt2, Dts.Variables("stagingResult").Value)
            oleDA3.Fill(dt3, Dts.Variables("dwhResult").Value)
            oleDA4.Fill(dt4, Dts.Variables("odsResult").Value)
            oleDA5.Fill(dt5, Dts.Variables("errorResult").Value)

            '' If data tables have rows then add it to the data set
            If dt1 IsNot Nothing AndAlso dt1.Rows.Count > 0 Then
                ds1.Tables.Add(dt1)
            End If

            If dt2 IsNot Nothing AndAlso dt2.Rows.Count > 0 Then
                ds2.Tables.Add(dt2)
            End If

            If dt3 IsNot Nothing AndAlso dt3.Rows.Count > 0 Then
                ds3.Tables.Add(dt3)
            End If

            If dt4 IsNot Nothing AndAlso dt4.Rows.Count > 0 Then
                ds4.Tables.Add(dt4)
            End If

            If dt5 IsNot Nothing AndAlso dt5.Rows.Count > 0 Then
                ds5.Tables.Add(dt5)
            End If

            '' Count the number of tables in the data set
            Dim dsCount1 As Integer = ds1.Tables.Count
            Dim dsCount2 As Integer = ds2.Tables.Count
            Dim dsCount3 As Integer = ds3.Tables.Count
            Dim dsCount4 As Integer = ds4.Tables.Count
            Dim dsCount5 As Integer = ds5.Tables.Count
            Dim str As String = String.Empty
            Dim result As String = Dts.Variables("mailBody").Value.ToString()
            Dim ifsResult As String = Dts.Variables("ifsResult").Value.ToString()
            Dim strBody As String = "<html><body style='font-family: Arial, Helvetica, sans-serif;font-size: 12px;'>" & result.ToString & "<br><br>" & ifsResult.ToString & "<br><br>"
            Dim strBodyEnd As String = "</body></html>"

            str += "&nbsp;<p>"

            '' The following code captures the results of datatables and buils an html string to dispose as an email
            For x As Integer = 0 To dsCount2 - 1
                If ds2.Tables(x) IsNot Nothing AndAlso ds2.Tables(x).Rows.Count > 0 Then
                    Dim strText2 As String = DataTableToHTMLTable(ds2.Tables(x))
                    If x = 0 Then
                        str += strText2.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText2.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount3 - 1
                If ds3.Tables(x) IsNot Nothing AndAlso ds3.Tables(x).Rows.Count > 0 Then
                    Dim strText3 As String = DataTableToHTMLTable(ds3.Tables(x))
                    If x = 0 Then
                        str += strText3.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText3.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount4 - 1
                If ds4.Tables(x) IsNot Nothing AndAlso ds4.Tables(x).Rows.Count > 0 Then
                    Dim strText4 As String = DataTableToHTMLTable(ds4.Tables(x))
                    If x = 0 Then
                        str += strText4.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText4.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount1 - 1
                If ds1.Tables(x) IsNot Nothing AndAlso ds1.Tables(x).Rows.Count > 0 Then
                    Dim strText1 As String = DataTableToHTMLTable(ds1.Tables(x))
                    If x = 0 Then
                        str += strText1.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText1.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            str += "&nbsp;<p>"

            For x As Integer = 0 To dsCount5 - 1
                If ds5.Tables(x) IsNot Nothing AndAlso ds5.Tables(x).Rows.Count > 0 Then
                    Dim strText5 As String = DataTableToHTMLTable(ds5.Tables(x))
                    If x = 0 Then
                        str += strText5.ToString()
                    Else
                        If x > 0 Then
                            str += "<br>" & Replace(strText5.ToString(), "Query Result Set", "Query Result Set" & x)
                        End If
                    End If
                Else
                    str += vbEmpty.ToString
                End If
            Next x

            Dim msg As String = str.ToString
            message = strBody & msg & strBodyEnd
            Mail()   'only email if not empty recordset
            Dts.TaskResult = ScriptResults.Success
        Catch e As Exception
            Dim LockedVariable As Variables = Nothing
            Dts.VariableDispenser.LockOneForWrite("User::ScriptTaskErrorMsg", LockedVariable)
            LockedVariable("User::ScriptTaskErrorMsg").Value = "Error Description: " + e.Message.ToString()
            LockedVariable.Unlock()
            Dts.Events.FireError(0, "Script Task", "Error", String.Empty, 0)
            Dts.TaskResult = ScriptResults.Failure
        End Try
    End Sub

    Public Function DataTableToHTMLTable(ByVal inTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<style scoped>.myTable { background-color:#f4f4f4; width:900px;font-family: Arial, Helvetica, sans-serif;font-size: 12px;}.myTable th { background-color:#f4f4f4;color:black;text-align:left; }.myTable td, .myTable th { padding:0px;border:0px solid #000000; }</style>")
        dString.Append("<table class=myTable> ")
        dString.Append(GetHeader(inTable))
        dString.Append(GetBody(inTable))
        dString.Append("</table>")
        Return dString.ToString
    End Function

    Private Function GetHeader(ByVal dTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<thead><tr>")
        For Each dColumn As DataColumn In dTable.Columns
            dString.AppendFormat("<th>{0}</th>", dColumn.ColumnName)
        Next
        dString.Append("</tr></thead>")
        Return dString.ToString
    End Function

    Private Function GetBody(ByVal dTable As DataTable) As String
        Dim dString As New StringBuilder
        dString.Append("<tbody>")
        For Each dRow As DataRow In dTable.Rows
            dString.Append("<tr>")
            For dCount As Integer = 0 To dTable.Columns.Count - 1
                dString.AppendFormat("<td>{0}</td>", dRow(dCount))
            Next
            dString.Append("</tr>")
        Next
        dString.Append("</tbody>")
        Return dString.ToString()
    End Function

    Public Sub Mail()
        ''Variable Declaration
        Dim Mail As MailMessage
        Dim Client As SmtpClient
        Dim EmailFrom As String = Dts.Variables("mailFrom").Value.ToString()
        Dim EmailTo As String = Dts.Variables("mailTo").Value.ToString()
        Dim EmailSubject As String = Dts.Variables("mailSubject").Value.ToString()
        Dim EmailCc As String = Dts.Variables("mailCC").Value.ToString()
        Dim From As New MailAddress(EmailFrom.ToString)
        Mail = New MailMessage(From.ToString, EmailTo.ToString, EmailSubject.ToString, message)
        Client = New SmtpClient(Dts.Variables("smtp").Value.ToString())
        Client.Credentials = CredentialCache.DefaultNetworkCredentials

        Mail.IsBodyHtml = True
        Mail.CC.Add(EmailCc)
        Client.Send(Mail)
    End Sub

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_1e596af4df2d4842bda45cdd53253089")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_1e596af4df2d4842bda45cdd53253089")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a226967c-0431-4d6f-a027-12c53bd22145")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ST_1e596af4df2d4842bda45cdd53253089.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3f3ba971-b512-4dc9-8260-3afe875e92c0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_1e596af4df2d4842bda45cdd53253089</RootNamespace>
    <AssemblyName>ST_1e596af4df2d4842bda45cdd53253089</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1e596af4df2d4842bda45cdd53253089</msb:CodeName>
		<msb:DisplayName>ST_1e596af4df2d4842bda45cdd53253089</msb:DisplayName>
		<msb:ProjectId>{148998E5-23CB-4BAC-B6B3-536F9FBD477A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1e596af4df2d4842bda45cdd53253089.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_1e596af4df2d4842bda45cdd53253089.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABl5hV4AAAAAAAAAAOAAIiALAVAAADAAAAAIAAAAAAAAQk4A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPBNAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASC4AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAk
TgAAAAAAAEgAAAACAAUAaCwAANAgAAABAAAAAAAAADhNAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswCABxBwAAAQAAEXMrAAAKCnMr
AAAKC3MrAAAKDHMrAAAKDXMrAAAKEwRzLAAAChMFcywAAAoTBnMsAAAKEwdzLAAAChMIcywAAApz
LQAAChMJcy0AAAoTCnMtAAAKEwtzLQAAChMMcy0AAAoTDREFEQkCKC4AAApvLwAACnIzAABwbzAA
AApvMQAACigmAAAKbzIAAAomEQYRCgIoLgAACm8vAAAKckcAAHBvMAAACm8xAAAKKCYAAApvMgAA
CiYRBxELAiguAAAKby8AAApyYwAAcG8wAAAKbzEAAAooJgAACm8yAAAKJhEIEQwCKC4AAApvLwAA
CnJ3AABwbzAAAApvMQAACigmAAAKbzIAAAomEQ0CKC4AAApvLwAACnKLAABwbzAAAApvMQAACigm
AAAKbzIAAAomEQksHBEJbzMAAApvNAAAChYxDQZvNQAAChEJbzYAAAoRCiwcEQpvMwAACm80AAAK
FjENB281AAAKEQpvNgAAChELLBwRC28zAAAKbzQAAAoWMQ0IbzUAAAoRC282AAAKEQwsHBEMbzMA
AApvNAAAChYxDQlvNQAAChEMbzYAAAoRDSwdEQ1vMwAACm80AAAKFjEOEQRvNQAAChENbzYAAAoG
bzUAAApvNwAAChMOB281AAAKbzcAAAoTDwhvNQAACm83AAAKExAJbzUAAApvNwAAChMREQRvNQAA
Cm83AAAKExJ+OAAAChMTAiguAAAKby8AAApyowAAcG8wAAAKbzEAAApvOQAAChMUAiguAAAKby8A
AApytQAAcG8wAAAKbzEAAApvOQAAChMVG407AAABJRZyyQAAcKIlFxEUbzoAAAqiJRhyagEAcKIl
GREVbzoAAAqiJRpyagEAcKIoOwAAChMWcnwBAHATFxETcpoBAHAoPAAAChMTEQ8X2hMZFhMaOK0A
AAAHbzUAAAoRGm89AAAKLH8HbzUAAAoRGm89AAAKbzMAAApvNAAAChYxZQIHbzUAAAoRGm89AAAK
KBEAAAYTGxEaLRIRExEbbzoAAAooPAAAChMTK1MRGhYxThETcq4BAHARG286AAAKcrgBAHByuAEA
cBEaKD4AAAooPAAAChcVFig/AAAKKEAAAAoTEysZERMWExwSHP4WKAAAAW9BAAAKKDwAAAoTExEa
F9YTGhEaERk+Sv///xETcpoBAHAoPAAAChMTERAX2hMdFhMeOK0AAAAIbzUAAAoRHm89AAAKLH8I
bzUAAAoRHm89AAAKbzMAAApvNAAAChYxZQIIbzUAAAoRHm89AAAKKBEAAAYTHxEeLRIRExEfbzoA
AAooPAAAChMTK1MRHhYxThETcq4BAHARH286AAAKcrgBAHByuAEAcBEeKD4AAAooPAAAChcVFig/
AAAKKEAAAAoTEysZERMWExwSHP4WKAAAAW9BAAAKKDwAAAoTExEeF9YTHhEeER0+Sv///xETcpoB
AHAoPAAAChMTEREX2hMgFhMhOK0AAAAJbzUAAAoRIW89AAAKLH8JbzUAAAoRIW89AAAKbzMAAApv
NAAAChYxZQIJbzUAAAoRIW89AAAKKBEAAAYTIhEhLRIRExEibzoAAAooPAAAChMTK1MRIRYxThET
cq4BAHARIm86AAAKcrgBAHByuAEAcBEhKD4AAAooPAAAChcVFig/AAAKKEAAAAoTEysZERMWExwS
HP4WKAAAAW9BAAAKKDwAAAoTExEhF9YTIREhESA+Sv///xETcpoBAHAoPAAAChMTEQ4X2hMjFhMk
OK0AAAAGbzUAAAoRJG89AAAKLH8GbzUAAAoRJG89AAAKbzMAAApvNAAAChYxZQIGbzUAAAoRJG89
AAAKKBEAAAYTJREkLRIRExElbzoAAAooPAAAChMTK1MRJBYxThETcq4BAHARJW86AAAKcrgBAHBy
uAEAcBEkKD4AAAooPAAAChcVFig/AAAKKEAAAAoTEysZERMWExwSHP4WKAAAAW9BAAAKKDwAAAoT
ExEkF9YTJBEkESM+Sv///xETcpoBAHAoPAAAChMTERIX2hMmFhMnOLMAAAARBG81AAAKESdvPQAA
CjmBAAAAEQRvNQAAChEnbz0AAApvMwAACm80AAAKFjFmAhEEbzUAAAoRJ289AAAKKBEAAAYTKBEn
LRIRExEobzoAAAooPAAAChMTK1MRJxYxThETcq4BAHARKG86AAAKcrgBAHByuAEAcBEnKD4AAAoo
PAAAChcVFig/AAAKKEAAAAoTEysZERMWExwSHP4WKAAAAW9BAAAKKDwAAAoTExEnF9YTJxEnESY+
RP///xETbzoAAAoTGAIRFhEYERcoQAAACn0JAAAEAigUAAAGAiguAAAKFm9CAAAK3YUAAAAlKEMA
AAoTKRQTKgIoLgAACm9EAAAKctoBAHASKm9FAAAKESpy2gEAcG8wAAAKcgwCAHARKW9GAAAKbzoA
AAooPAAACm9HAAAKESpvSAAACgIoLgAACm9JAAAKFnI0AgBwckwCAHB+OAAAChZvSgAACiYCKC4A
AAoXb0IAAAooSwAACt4AKgAAAEEcAAAAAAAAAAAAAOsGAADrBgAAhQAAACkAAAETMAQASwAAAAAA
AABzTAAACiVyWAIAcG9NAAAKJiVybQQAcG9NAAAKJiUCAygSAAAGb00AAAomJQIDKBMAAAZvTQAA
CiYlcpsEAHBvTQAACiZvTgAACioAGzADAG8AAAACAAARc0wAAAoKBnKtBABwb00AAAomA29PAAAK
b1AAAAoLKx4Hb1EAAAp0LQAAAQwGcsUEAHAIb1IAAApvUwAACiYHb1QAAAot2t4UB3VDAAABLAsH
dUMAAAFvVQAACtwGct8EAHBvTQAACiYGb04AAAoqAAEQAAACABIANkgAFAAAAAAbMAQArAAAAAMA
ABFzTAAACgoGcvsEAHBvTQAACiYDbzMAAApvVgAACgsrWwdvUQAACnQuAAABDAZyCwUAcG9NAAAK
JgNvTwAACm83AAAKF9oNFhMEKx8GchUFAHAIEQRvVwAACigmAAAKb1MAAAomEQQX1hMEEQQJMdwG
ci8FAHBvTQAACiYHb1QAAAotnd4UB3VDAAABLAsHdUMAAAFvVQAACtwGcjsFAHBvTQAACiYGb04A
AAoqARAAAAIAEgBzhQAUAAAAABMwBAD3AAAABAAAEQIoLgAACm8vAAAKck0FAHBvMAAACm8xAAAK
bzkAAAoLAiguAAAKby8AAApyXwUAcG8wAAAKbzEAAApvOQAACgwCKC4AAApvLwAACnJtBQBwbzAA
AApvMQAACm85AAAKDQIoLgAACm8vAAAKcoUFAHBvMAAACm8xAAAKbzkAAAoTBAdvOgAACnNYAAAK
EwURBW9ZAAAKCG86AAAKCW86AAAKAnsJAAAEc1oAAAoKAiguAAAKby8AAApykwUAcG8wAAAKbzEA
AApvOQAACnNbAAAKJShcAAAKb10AAAoGF29eAAAKBm9fAAAKEQRvYAAACgZvYQAACio2AgMoJgAA
CihiAAAKKh4CKGMAAAoqLtAIAAACKCMAAAoqHgIoOQAACioAAAATMAEAFAAAAAUAABECjAUAABst
CCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMwAgAoAAAABgAAEQJ7ZQAACm9mAAAKCgaMCAAAGy0S
KAIAACsKAntlAAAKBm9nAAAKBipKAigiAAAKAnNoAAAKfWUAAAoqAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAOQJAAAjfgAAUAoAAEQMAAAjU3RyaW5ncwAAAACUFgAAoAUAACNV
UwA0HAAAEAAAACNHVUlEAAAARBwAAIwEAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+gEzABYA
AAEAAABJAAAACgAAAA0AAAAdAAAABwAAAGgAAAACAAAANwAAAAYAAAAEAAAACAAAAAkAAAAIAAAA
AQAAAAYAAAABAAAAAwAAAAMAAAACAAAAAABOBgEAAAAAAAYAZATFCQYACQXFCQYAOwMGCQ8AawoA
AAYAfAMaBwYARwQaBwYA8AQaBwYAhAQaBwYAnQQaBwYAwwMaBwYAuASTBgYAaAN/CQYA5AJ/CQYA
DwQaBwYA3gNjBQoABwMfCAoAvwIoBgoATwMoBg4AdAJVCQ4AkAgZCQYA9wMGCQ4AkwOeCQ4AqwPi
AAYAbQuTBg4ATwhVCQ4ALATiAAYAJwKTBg4AAQDsBQoA8gKfBgYADwjlCQYAhwcFBwoAnwLwBgYA
HgMGCRIAzgSxBRIAWAKxBQYAhgWTBhYAiQuvABYAcAjHABYAlwGvAA4AIALiAAYAfQeTBhoAiQr4
AQYA/QfiCwYAzQjzChYAxwavABYA+AuvAAoAXgE+BgoAHQs+BgYAmgaTBgYAxQGTBgYAMwwaBwYA
BgvFCQYA/ghSBRIAFgaxBRoAsAH4ARYAawevABYALAevABYAhAKvAAYAfwWTBg4A5wqeCQ4Akwri
AA4ACAHiAA4AuwCeCRoAWAj4ARIANwixBRYAQAevAAYAuQGTBgoApQs+BgoAcgF+CwoA2gV+CwoA
xgt+CwoAVQc+BgYA5wiTBgAAAABPAAAAAAABAAEAAAAAAOIGAAxNAAEAAQAAAAAAjggADFEAAQAC
AAABEAB0CwAMYQABAAMAAAAAACcK9glhAAUACAAAARAAmworAIEABwAMAAEAAAC8BisAjQAJAA8A
BQEAAEcJAABhAAoAFQAFAQAAEAAAAGEACgAcAAIBAAAxCwAAxQALAB4AMQDGByACMQCdBygCMQCx
BzACMQDfBzgCEQCZCEACEQBMAkQCEQAnBUgCEQBnC0wCAQBqAfUAIQDuC94BBganAE8CVoAVC1IC
VoAsAlICUCAAAAAABhjxCAYAAQBYIAAAAAAGGPEIBgABAGAgAAAAABEY9whRAQEAiiAAAAAAEwiB
CFYCAQCWIAAAAAATCNIGWwIBAKIgAAAAABMISwhgAgEAriAAAAAAEwg3CWUCAQC6IAAAAAADGPEI
BgABAMIgAAAAABYICwhqAgEA7iAAAAAAFgg0Am8CAQD1IAAAAAAWCEACdAIBAP0gAAAAABEY9whR
AQIADiEAAAAABhjxCAYAAgAYIQAAAAAWCC8FegICAHQhAAAAAAYY8QgGAAIAfCEAAAAABgDCBgYA
AgAYKQAAAAAGAIIBfwICAHApAAAAAAEAkwd/AgMA/CkAAAAAAQAnDH8CBADEKgAAAAAGAEkGBgAF
AMcrAAAAAMYC1Aq6AQUA1SsAAAAAxgJGAeQABgDdKwAAAACDABgChgIGAOkrAAAAAMYCfQX4AAYA
9CsAAAAAEQCUAIsCBgAULAAAAAABAIAAkwIHALogAAAAAAYY8QgGAAgAICwAAAAAAwgtAUoACABU
LAAAAAAGGPEIBgAIAAAAAQBMBQAAAQCoAQAAAQChAQAAAQChAQAAAQCRBwAAAQA9AQAAAQA9AQkA
8QgBABEA8QgGABkA8QgKACkA8QgQADEA8QgQADkA8QgQAEEA8QgQAEkA8QgQAFEA8QgQAFkA8QgV
AGEA8QgVAGkA8QgQAHEA8QgQAHkA8QgQAIEA8QgaAJEA8QggAKkA8QgGALEA8QgGALkA8QgGANEA
8QgmAOkA8QgQAAkB8QgGABEB8QgGAJkA8QgGAKEA8QgGAAwA8QgGABQA8QgGABwA8QgGACQA8QgG
AAwALQFKABQALQFKABwALQFKACQALQFKAMEA8QgGANkA1wFPANkALwxXAPEA8QhdAKEBQwVlAAEB
8QgGAKkBaghqAKkBkQtqABkB8QgGACkB8QgGADEB8QgGADkB8QgGABkBKQu/ALEBhQrFAFEBigbL
ALkBLwXSADEBdgbWADkBSgveAMEBvAvkACkBegroAMkB+ADuANEBvAvkANkBPAz1AMEAfQX4ANkB
fQX4ANkBUwv8ANkBUwsCAckBigYIAeEBfQUPAekBFgEUAdkBUwsgAYkBfQX4ALEBlgsBAPkBvQgn
AbEBVAguAQEC1AI0AUkBUgH4ALkBOQU9AVEBiwUGALEBPwtCAQkCoQhIAfkBqwhRAVkB8QgGAFkB
AQFVAVkBfQX4ADkB2wpoAdEB2QhuAWEBsAvSAGkB6QH4AFkBWgt0AWEB2Qt8ARkCtwIGAMEB2Qhu
AXEBigaOAYEB8QgQAIEBfQX4AHkB8QgmACEC8QgQACkCtgqgASECpgqmAXkBewYVAHkBWACtAUEC
+AAQACEC/ACzAcEA1Aq6AcEARgHkAEkCHgHHATQA7gveATwALwVKADwAOQX1ATwA8QgGAAgAMAAW
AggANAAbAikAqwBFBC4ACwDDAi4AEwDMAi4AGwDrAi4AIwD0Ai4AKwAdAy4AMwAdAy4AOwD0Ai4A
QwAjAy4ASwAdAy4AUwA6Ay4AWwAdAy4AYwBAAy4AawBqAy4AcwB3A0AAiwAbAkAAgwDBA0MAewDK
A0MAgwDBA0kAqwBWBGMAewDKA2MAgwDBA2kAqwBqBIAAiwAbAoMAkwAbAoMAmwAbAoMAewDKA4kA
qwB3BKAAiwAbAqkAgwDrAsAAiwAbAskAgwDrAuAAiwAbAuMAuwAbAuMAUwAdA+kAswAbAgMBgwDB
AwMBowDjAyMBgwDBAyMBWwAdA6ACgwDBA6ACiwAbAsACgwDBA8ACiwAbAuACgwDBA+ACiwAbAgAD
gwDBAwADiwAbAiADiwAbAkADiwAbAmADiwAbAmADgwDBA4ADiwAbAqADiwAbAqADgwDBA28AXAGA
AZMBvwHSAQQAAQAFAAUABgAHAAkACAAAAJAImwIAAOQGoAIAAE8IpQIAAEkJqgIAAA8IrwIAAFAC
tAIAAEwFuQIAADEBvgICAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQAC
AA4ADwACABwAEQAuADUAPABDAMQB1wHmAe0BBIAAAAEAAAAAAAAAAAAAAAAAKwAAAAQAAAAAAAAA
AAAAAPsB2QAAAAAABAAAAAAAAAAAAAAA+wGTBgAAAAAKAAAAAAAAAAAAAAAEAuIAAAAAAA0AAAAA
AAAAAAAAAA0CkgUAAAAABAAAAAAAAAAAAAAA+wGvAAAAAAANAAAAAAAAAAAAAAANAl8AAAAAAAAA
AAABAAAAMwoAAAgABAAJAAQACgAHAAAAEAASAH4AAAAQADMAfgAAAAAANQB+AMkAzQHJAPABAAAA
AABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBTVF8xZTU5NmFmNGRm
MmQ0ODQyYmRhNDVjZGQ1MzI1MzA4OQA8TW9kdWxlPgBnZXRfQ0MATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFs
dWVfXwBTeXN0ZW0uRGF0YQBQcm9qZWN0RGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMAQWRkAFNlbmQAQXBwZW5kAENvbXBhcmVNZXRob2QAUmVwbGFj
ZQBDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUAZ2V0
X01lc3NhZ2UATWFpbE1lc3NhZ2UAbWVzc2FnZQBDcmVkZW50aWFsQ2FjaGUARGF0YVRhYmxlVG9I
VE1MVGFibGUARGF0YVRhYmxlAGRUYWJsZQBpblRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9Db2x1bW5OYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBWYXJpYW50VHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBBcHBsaWNhdGlvbkJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBMb2NrT25lRm9yV3JpdGUA
R3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhp
ZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAE15R3JvdXBDb2xsZWN0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3Rl
bS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNYXRoAFVubG9j
awBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBOZXR3b3JrQ3JlZGVudGlhbABNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
TXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU3lzdGVtLk5ldC5NYWlsAFNUXzFlNTk2YWY0ZGYyZDQ4NDJiZGE0NWNkZDUzMjUzMDg5LmRs
bABGaWxsAHNldF9Jc0JvZHlIdG1sAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3RlbS5Db21wb25l
bnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAGdldF9BcHBsaWNhdGlvbgBNeUFw
cGxpY2F0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24ATWFp
bEFkZHJlc3NDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5m
bwBHZXRIZWFkZXIAbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0Nv
bXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAU3RyaW5n
QnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEV2ZW50
c09iamVjdFdyYXBwZXIAZ2V0X1VzZXIAZ2V0X1ZhcmlhYmxlRGlzcGVuc2VyAEVudGVyAE9sZURi
RGF0YUFkYXB0ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBGaXJlRXJyb3IAQ2xl
YXJQcm9qZWN0RXJyb3IAU2V0UHJvamVjdEVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IA
QWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3Nv
ZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNy
b3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRl
cm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzFlNTk2YWY0ZGYy
ZDQ4NDJiZGE0NWNkZDUzMjUzMDg5Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF8xZTU5NmFm
NGRmMmQ0ODQyYmRhNDVjZGQ1MzI1MzA4OS5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTdHJpbmdzAE15U2V0dGluZ3MAc2V0X0NyZWRl
bnRpYWxzAGdldF9EZWZhdWx0TmV0d29ya0NyZWRlbnRpYWxzAEVxdWFscwBnZXRfQ29sdW1ucwBD
b252ZXJzaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBNYWls
QWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBnZXRfUm93cwBDb25jYXQA
QXBwZW5kRm9ybWF0AG1fU3luY09iamVjdABNeVByb2plY3QAU3lzdGVtLk5ldABEYXRhU2V0AEV4
aXQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABnZXRfQ3VycmVudABnZXRfQ291bnQASUNyZWRl
bnRpYWxzQnlIb3N0AE1vdmVOZXh0AFN5c3RlbS5UZXh0AG1fQ29udGV4dABEYXRhUm93AFNUXzFl
NTk2YWY0ZGYyZDQ4NDJiZGE0NWNkZDUzMjUzMDg5Lk15AEdldEJvZHkAZ2V0X0Fzc2VtYmx5AEVt
cHR5AAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAA
E2UAdABsAFIAZQBzAHUAbAB0AAAbcwB0AGEAZwBpAG4AZwBSAGUAcwB1AGwAdAAAE2QAdwBoAFIA
ZQBzAHUAbAB0AAATbwBkAHMAUgBlAHMAdQBsAHQAABdlAHIAcgBvAHIAUgBlAHMAdQBsAHQAABFt
AGEAaQBsAEIAbwBkAHkAABNpAGYAcwBSAGUAcwB1AGwAdAAAgJ88AGgAdABtAGwAPgA8AGIAbwBk
AHkAIABzAHQAeQBsAGUAPQAnAGYAbwBuAHQALQBmAGEAbQBpAGwAeQA6ACAAQQByAGkAYQBsACwA
IABIAGUAbAB2AGUAdABpAGMAYQAsACAAcwBhAG4AcwAtAHMAZQByAGkAZgA7AGYAbwBuAHQALQBz
AGkAegBlADoAIAAxADIAcAB4ADsAJwA+AAERPABiAHIAPgA8AGIAcgA+AAAdPAAvAGIAbwBkAHkA
PgA8AC8AaAB0AG0AbAA+AAATJgBuAGIAcwBwADsAPABwAD4AAAk8AGIAcgA+AAAhUQB1AGUAcgB5
ACAAUgBlAHMAdQBsAHQAIABTAGUAdAAAMVUAcwBlAHIAOgA6AFMAYwByAGkAcAB0AFQAYQBzAGsA
RQByAHIAbwByAE0AcwBnAAAnRQByAHIAbwByACAARABlAHMAYwByAGkAcAB0AGkAbwBuADoAIAAA
F1MAYwByAGkAcAB0ACAAVABhAHMAawAAC0UAcgByAG8AcgAAghM8AHMAdAB5AGwAZQAgAHMAYwBv
AHAAZQBkAD4ALgBtAHkAVABhAGIAbABlACAAewAgAGIAYQBjAGsAZwByAG8AdQBuAGQALQBjAG8A
bABvAHIAOgAjAGYANABmADQAZgA0ADsAIAB3AGkAZAB0AGgAOgA5ADAAMABwAHgAOwBmAG8AbgB0
AC0AZgBhAG0AaQBsAHkAOgAgAEEAcgBpAGEAbAAsACAASABlAGwAdgBlAHQAaQBjAGEALAAgAHMA
YQBuAHMALQBzAGUAcgBpAGYAOwBmAG8AbgB0AC0AcwBpAHoAZQA6ACAAMQAyAHAAeAA7AH0ALgBt
AHkAVABhAGIAbABlACAAdABoACAAewAgAGIAYQBjAGsAZwByAG8AdQBuAGQALQBjAG8AbABvAHIA
OgAjAGYANABmADQAZgA0ADsAYwBvAGwAbwByADoAYgBsAGEAYwBrADsAdABlAHgAdAAtAGEAbABp
AGcAbgA6AGwAZQBmAHQAOwAgAH0ALgBtAHkAVABhAGIAbABlACAAdABkACwAIAAuAG0AeQBUAGEA
YgBsAGUAIAB0AGgAIAB7ACAAcABhAGQAZABpAG4AZwA6ADAAcAB4ADsAYgBvAHIAZABlAHIAOgAw
AHAAeAAgAHMAbwBsAGkAZAAgACMAMAAwADAAMAAwADAAOwAgAH0APAAvAHMAdAB5AGwAZQA+AAEt
PAB0AGEAYgBsAGUAIABjAGwAYQBzAHMAPQBtAHkAVABhAGIAbABlAD4AIAAAETwALwB0AGEAYgBs
AGUAPgAAFzwAdABoAGUAYQBkAD4APAB0AHIAPgAAGTwAdABoAD4AewAwAH0APAAvAHQAaAA+AAAb
PAAvAHQAcgA+ADwALwB0AGgAZQBhAGQAPgAADzwAdABiAG8AZAB5AD4AAAk8AHQAcgA+AAAZPAB0
AGQAPgB7ADAAfQA8AC8AdABkAD4AAAs8AC8AdAByAD4AABE8AC8AdABiAG8AZAB5AD4AABFtAGEA
aQBsAEYAcgBvAG0AAA1tAGEAaQBsAFQAbwAAF20AYQBpAGwAUwB1AGIAagBlAGMAdAAADW0AYQBp
AGwAQwBDAAAJcwBtAHQAcAAAAAAAA2WPMQoPDUyVoj/Id+WmLAAEIAEBCAMgAAEFIAEBEREEIAEB
DgQgAQECBSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQBEmUGFRIkARIgBCAA
EwAHAAESbRGAyQUgABKAzQcgAgEOEoDNBAABHBwEAAEBHE8HKxKAlRKAlRKAlRKAlRKAlRKAmRKA
mRKAmRKAmRKAnRKAnRKAnRKAnRKAnQgICAgIDg4ODg4OCAgOEYChCAgOCAgOCAgOCAgOEoClEoCp
BSAAEoDZBSAAEoCpBiABEoDdHAMgABwHIAIIEoCdHAUgABKA4QMgAAgFIAASgOUGIAEBEoCdAgYO
AyAADgUAAQ4dDgUAAg4ODgYgARKAnQgEAAEOCAsABg4ODg4ICBGA+QYAAw4ODg4GAAEBEoClBSAA
EoEBCCACAQ4QEoCpBCABARwFIAASgQUIIAUCCA4ODggDAAABBiABEoCtDgsHAxKArRKAsRKAtQUg
ABKBCQUgABKAsQcgAhKArQ4cAyAAAg0HBRKArRKAsRKAuQgIBCABHAgMBwYSgL0ODg4OEoDBBQAA
EoEZBiABARKBHQUgABKBIQYgAQESgL0EIAECHAQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQB
EwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDM
kQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIG
HAIGCAMGESgEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAYgAQ4SgJ0E
IAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgAEn0ECAASGAQo
ABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
VF8xZTU5NmFmNGRmMmQ0ODQyYmRhNDVjZGQ1MzI1MzA4OQAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDE5AAAFAQABAAApAQAkYTIyNjk2N2MtMDQzMS00ZDZmLWEwMjctMTJjNTNiZDIyMTQ1AAAM
AQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4w
LjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJv
dG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29t
cHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNl
cwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAYTgAAAAAAAAAAAAAyTgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
JE4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMAAAAA
AAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMQBlADUA
OQA2AGEAZgA0AGQAZgAyAGQANAA4ADQAMgBiAGQAYQA0ADUAYwBkAGQANQAzADIANQAzADAAOAA5
AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEA
SQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAxAGUANQA5ADYAYQBmADQAZABmADIAZAA0
ADgANAAyAGIAZABhADQANQBjAGQAZAA1ADMAMgA1ADMAMAA4ADkALgBkAGwAbAAAAEgAEgABAEwA
ZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAw
ADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEA
TwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADEAZQA1ADkANgBhAGYANABk
AGYAMgBkADQAOAA0ADIAYgBkAGEANAA1AGMAZABkADUAMwAyADUAMwAwADgAOQAuAGQAbABsAAAA
aAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAxAGUANQA5ADYAYQBmADQAZABm
ADIAZAA0ADgANAAyAGIAZABhADQANQBjAGQAZAA1ADMAMgA1ADMAMAA4ADkAAAA0AAgAAQBQAHIA
bwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAEQ+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging result"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FD524A3C-5CA5-423B-B203-2164F378271A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging result"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0C0C5B4D-1B9E-4FFB-BEF7-E08709D0061B}"
          SQLTask:SqlStatementSource="SELECT 'DEV ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'Staging loaded ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'Staging busy' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS Staging FROM Logging.ProcessLog WHERE PackageName LIKE '%Staging%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'TST ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'Staging loaded ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'Staging busy' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS Staging FROM [FDODWHT01\DWHTST].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%Staging%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'ACC ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'Staging loaded ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'Staging busy' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS Staging FROM [FDODWHA01\DWHACC].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%Staging%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11&#xA;UNION ALL&#xA;SELECT 'PRD ' + CASE WHEN COUNT(distinct PackageName) = 12 THEN 'Staging loaded ' + CAST(MAX(ExecutionEndDate) AS nvarchar(19)) ELSE 'Staging busy' + CAST(COUNT(distinct PackageName) AS VARCHAR(10)) + ' loaded ' END AS Staging FROM [FDODWHP01\DWHPRD].DWH_Control.Logging.ProcessLog WHERE PackageName LIKE '%Staging%-Total' AND ExecutionStartDate &gt;= DATEADD(dd, DATEDIFF(dd, 0, GETDAte()), 0) --11"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::stagingResult" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{51921699-4AEC-434A-B720-03E2BB85DF7C}"
      DTS:From="Package\Staging result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DWH result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F93E1A2D-F68C-4852-96BA-C4313D77860C}"
      DTS:From="Package\DWH result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\ODS result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{86315E72-39B2-4760-B10B-17C59AA0AD20}"
      DTS:From="Package\ETL result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Staging result" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{4BF933D0-C4C2-4DA5-9CED-9A7C78CDDEA4}"
      DTS:From="Package\ODS result"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\IFS results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{B0A7E994-A2EA-4237-9034-ED1C0E4B2A9E}"
      DTS:From="Package\IFS results"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Error results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{A4A9AC70-6361-415B-B2E3-2C9B412D2E8F}"
      DTS:From="Package\Error results"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42"
          Id="Package\DWH result"
          TopLeft="74,168" />
        <NodeLayout
          Size="107,42"
          Id="Package\Error results"
          TopLeft="77,391" />
        <NodeLayout
          Size="126,42"
          Id="Package\ETL result"
          TopLeft="94,14" />
        <NodeLayout
          Size="129,42"
          Id="Package\IFS results"
          TopLeft="96,313" />
        <NodeLayout
          Size="129,42"
          Id="Package\ODS result"
          TopLeft="91,243" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="88,472" />
        <NodeLayout
          Size="172,42"
          Id="Package\Staging result"
          TopLeft="74,90" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="160,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="157.75,210">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.5,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="158,285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="160.5,355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30,36"
              Start="0,0"
              End="-30,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="-4,18" />
                  <mssgle:LineSegment
                    End="-26,18" />
                  <mssgle:CubicBezierSegment
                    Point1="-26,18"
                    Point2="-30,18"
                    Point3="-30,22" />
                  <mssgle:LineSegment
                    End="-30,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="130.5,433">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,39"
              Start="0,0"
              End="23,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5"
                    Point2="0,19.5"
                    Point3="4,19.5" />
                  <mssgle:LineSegment
                    End="19,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="19,19.5"
                    Point2="23,19.5"
                    Point3="23,23.5" />
                  <mssgle:LineSegment
                    End="23,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>