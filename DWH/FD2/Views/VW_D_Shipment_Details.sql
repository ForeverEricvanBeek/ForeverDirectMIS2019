




CREATE VIEW [FD2].[VW_D_Shipment_Details]
AS

WITH CTE_EVENTS AS(

	SELECT  
		 SE.SHIPMENT_ID
       , SHIPMENT_EVENT_NR
       , SHIPMENT_EVENT_TS
       , SE.SHIPMENT_EVENT_CODE
       , SHIPPER_SHIPMENT_REF
       , SE.FORWARDER_EVENT_CODE
       , FORWARDER_EVENT_DESCRIPTION
	   , SHIPMENT_EVENT_DESCRIPTION
	   , CONSIGNEE_REFERENCE          
	   , FORWARDER_NAME
	   , SM.DELIVERED
	   , SM.ONTIME
	   , SM.INTRANSIT
	   , SM.STATUS
	   , SM.PERFORMANCE
	   , SM.SLA_RATE_CODE
	   , SM.INCOTERM_CODE
	   , SM.DY_POSTAL_CODE
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION = 'SHIPMENT CREATED'  THEN RANK ()OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS ) ELSE 0  END AS PARCELL_CREATED 
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION = 'SHIPMENT CREATED' THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_PARCELL_CREATED
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION = 'COLLECTED' THEN RANK ()OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS ) ELSE 0 END AS PARCELL_COLLECTED
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION = 'COLLECTED'  THEN SHIPMENT_EVENT_TS  ELSE NULL END AS DATETIME_PARCELL_COLLECTED
	, CASE WHEN FORWARDER_EVENT_DESCRIPTION = 'OUT FOR DELIVERY' THEN SHIPMENT_EVENT_TS ELSE NULL END AS BILLDATE
	, CASE WHEN FORWARDER_EVENT_DESCRIPTION = 'OUT FOR DELIVERY' THEN RANK ()OVER (PARTITION BY SHIPPER_SHIPMENT_REF, FORWARDER_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS )ELSE 0  END AS PARCELL_BILLDATE_FLAG
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ( 'DELIVERY AT PICKUP LOCATION', 'DELIVERED AT PICKUP-LOCATION' ) THEN RANK () OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS ) ELSE 0 END AS PARCELL_AT_PICKUP_LOCATION
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ( 'DELIVERY AT PICKUP LOCATION', 'DELIVERED AT PICKUP-LOCATION' ) THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_PARCELL_AT_PICKUP_LOCATION
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('DELIVERED', 'COLLECTED BY CONSIGNEE', 'DELIVERED TO PO BOX') THEN RANK ()OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS )ELSE 0 END AS PARCELL_DELIVERED
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('DELIVERED', 'COLLECTED BY CONSIGNEE', 'DELIVERED TO PO BOX') THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_PARCELL_DELIVERED
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('1ST DELIVERY ATTEMPT', 'ADDRESSEE NOT PRESENT', 'RETURNED TO SENDER / REFUSED') THEN '1' ELSE NULL END AS FIRST_ATTEMPT
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('1ST DELIVERY ATTEMPT', 'ADDRESSEE NOT PRESENT', 'RETURNED TO SENDER / REFUSED') THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_FIRST_ATTEMPT
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('ARRIVED AT DELIVERY DEPOT', 'ARRIVED AT OUTBOUND DEPOT', 'DELAYED / ATTEMPT DELIVERY NEXT WORKING DAY' , 'INTRANSIT') THEN RANK () OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS ) ELSE 0  END AS PARCELL_IN_DELIVERY
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('ARRIVED AT DELIVERY DEPOT', 'ARRIVED AT OUTBOUND DEPOT', 'DELAYED / ATTEMPT DELIVERY NEXT WORKING DAY' , 'INTRANSIT' ) THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_PARCELL_IN_DELIVERY
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('DELAYED / ERROR IN PROCESSING') THEN RANK ()OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY   SHIPMENT_EVENT_TS ) ELSE 0 END AS PARCELL_WITH_ISSUE
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION IN ('DELAYED / ERROR IN PROCESSING') THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_PARCELL_WITH_ISSUE
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION LIKE ('RETURN%') THEN RANK () OVER (PARTITION BY SHIPPER_SHIPMENT_REF, SHIPMENT_EVENT_DESCRIPTION ORDER BY SHIPMENT_EVENT_TS )ELSE 0 END AS PARCELL_RETURNED
	, CASE WHEN SHIPMENT_EVENT_DESCRIPTION LIKE ('RETURN%') THEN SHIPMENT_EVENT_TS ELSE NULL END AS DATETIME_PARCELL_RETURNED
FROM [TPX7].[VW_SHIPMENT_EVENT] SE
INNER JOIN TPX7.VW_SHIPMENT SM
    ON SM.SHIPMENT_ID = SE.SHIPMENT_ID
	AND SM.ActInd = 'Y'
	AND SE.SHIPMENT_EVENT_TS >= DATEADD(YEAR,-2,GETDATE())
WHERE SE.ActInd = 'Y'
GROUP BY
		SE.SHIPMENT_ID
	, SHIPMENT_EVENT_NR
	, SHIPMENT_EVENT_TS
	, SE.SHIPMENT_EVENT_CODE
	, SHIPPER_SHIPMENT_REF
	, SE.FORWARDER_EVENT_CODE
	, FORWARDER_EVENT_DESCRIPTION
	, SHIPMENT_EVENT_DESCRIPTION
	, CONSIGNEE_REFERENCE  
	, RUN_NUMBER
	, FORWARDER_NAME
	, FORWARDER_NAME
	, SM.DELIVERED
	, SM.ONTIME
	, SM.INTRANSIT
	, SM.STATUS
	, SM.PERFORMANCE
	, SM.SLA_RATE_CODE
	, SM.INCOTERM_CODE
	, SM.DY_POSTAL_CODE
)
SELECT               

		VV.SHIPPER_SHIPMENT_REF AS [Shipper_Ref_ID]
	,	VV.CONSIGNEE_REFERENCE AS [Customer_Ref_ID]
    ,   VV.SHIPMENT_ID  AS [Shipment_ID]
	,	VV.FORWARDER_NAME AS [Carrier]
	,	VV.DELIVERED	AS [Is Delivered]
	,   VV.ONTIME		AS [Is Ontime]
	,   VV.INTRANSIT	AS [Is Intransit]	
	,   VV.STATUS		AS [Delivery Status]
	,   VV.PERFORMANCE	AS [Delivery Performance]
	,   VV.SLA_RATE_CODE AS [Rate Code]
	,	VV.INCOTERM_CODE AS [Incoterm]
	,   VV.DY_POSTAL_CODE AS [Delivery Postal Code]
    ,   MAX(VV.PARCELL_SHIPMENT_CREATE_DATE) AS [Shipment Create Date] 
    ,   MAX(VV.PARCELL_COLLECT_DATE) AS [Parcel Collection Date]
    ,   MAX(PARCEL_DELIVERED_PICKUP_LOCATION) AS [Parcel Delivered at Pickup Date]  
    ,   MAX(PARCEL_RECEIVED_BY_CUSTOMER)  AS [Parcel Delivered at Customer Date] 
    ,   MAX(PARCEL_RETURNED_TO_FD) AS [Parcel Returned at FD Date]
    ,	MAX(PARCEL_LAST_DELIVERY_DATE) AS [Parcel Last Delivery Date]
    ,   MIN(DATETIME_FIRST_ATTEMPT) AS [First Attempt Date]
	,   MAX(PARCEL_BILLDATE) AS [Carrier Billing Date]
	--  Date when process is fully finished, value may change if a parcel return is initiated. and thus updating some of the fields
	,	CASE	WHEN MIN(DATETIME_FIRST_ATTEMPT) IS NOT NULL THEN MIN(DATETIME_FIRST_ATTEMPT) 	
				WHEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION) IS NOT NULL THEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION)
				WHEN MIN(PARCEL_RETURNED_TO_FD) IS NOT NULL THEN MIN(PARCEL_RETURNED_TO_FD) 
				WHEN MIN(PARCEL_RECEIVED_BY_CUSTOMER) IS NOT NULL THEN MIN(PARCEL_RECEIVED_BY_CUSTOMER)							
		ELSE NULL END AS [OTIF Calculation Date]
	-- Number of Days between Start Delivery and actual delivery
	, (DATEDIFF(DD, MIN(PARCELL_SHIPMENT_CREATE_DATE), 	 
		CASE WHEN MIN(DATETIME_FIRST_ATTEMPT) IS NOT NULL THEN MIN(DATETIME_FIRST_ATTEMPT) 	
				WHEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION) IS NOT NULL THEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION)
				WHEN MIN(PARCEL_RETURNED_TO_FD) IS NOT NULL THEN MIN(PARCEL_RETURNED_TO_FD) 
				WHEN MIN(PARCEL_RECEIVED_BY_CUSTOMER) IS NOT NULL THEN MIN(PARCEL_RECEIVED_BY_CUSTOMER)
			ELSE NULL END) + 0)
		-(DATEDIFF(WK, MIN(PARCELL_SHIPMENT_CREATE_DATE), 	  
			CASE WHEN MIN(DATETIME_FIRST_ATTEMPT) IS NOT NULL THEN MIN(DATETIME_FIRST_ATTEMPT) 	
				 WHEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION) IS NOT NULL THEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION)
				 WHEN MIN(PARCEL_RETURNED_TO_FD) IS NOT NULL THEN MIN(PARCEL_RETURNED_TO_FD) 
				 WHEN MIN(PARCEL_RECEIVED_BY_CUSTOMER) IS NOT NULL THEN MIN(PARCEL_RECEIVED_BY_CUSTOMER)
			ELSE NULL END) * 2)
          -(CASE WHEN DATENAME(DW, CASE WHEN MIN(DATETIME_FIRST_ATTEMPT) IS NOT NULL THEN MIN(DATETIME_FIRST_ATTEMPT) 	
				 WHEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION) IS NOT NULL THEN MAX(PARCEL_DELIVERED_PICKUP_LOCATION)
				 WHEN MIN(PARCEL_RETURNED_TO_FD) IS NOT NULL THEN MIN(PARCEL_RETURNED_TO_FD) 
				 WHEN MIN(PARCEL_RECEIVED_BY_CUSTOMER) IS NOT NULL THEN MIN(PARCEL_RECEIVED_BY_CUSTOMER)
			ELSE NULL END) = 'SUNDAY' THEN 1 ELSE 0 END)
           -(CASE WHEN DATENAME(DW, MAX(PARCEL_RECEIVED_BY_CUSTOMER)) = 'SATURDAY' THEN 1 ELSE 0 END)  AS [LT_OTIF]
		--More Calculations where difference between dates is shown. This is to check performance.
		, (DATEDIFF(DD, MIN(PARCELL_SHIPMENT_CREATE_DATE), MAX(PARCEL_RECEIVED_BY_CUSTOMER)) + 0)
		     -(DATEDIFF(WK, MIN(PARCELL_SHIPMENT_CREATE_DATE), MAX(PARCEL_RECEIVED_BY_CUSTOMER)) * 2)
             -(CASE WHEN DATENAME(DW, MIN(PARCELL_SHIPMENT_CREATE_DATE)) = 'SUNDAY' THEN 1 ELSE 0 END)
             -(CASE WHEN DATENAME(DW, MAX(PARCEL_RECEIVED_BY_CUSTOMER)) = 'SATURDAY' THEN 1 ELSE 0 END)  AS [OLPN LT Create to Delivered]
		,  (DATEDIFF(DD, MIN(PARCELL_SHIPMENT_CREATE_DATE), MAX(PARCEL_RECEIVED_BY_CUSTOMER)) + 0)
              -(DATEDIFF(WK, MIN(PARCELL_SHIPMENT_CREATE_DATE), MAX(PARCEL_RECEIVED_BY_CUSTOMER)) * 2)
              -(CASE WHEN DATENAME(DW, MIN(PARCELL_SHIPMENT_CREATE_DATE)) = 'SUNDAY' THEN 1 ELSE 0 END)
              -(CASE WHEN DATENAME(DW, MAX(PARCEL_RECEIVED_BY_CUSTOMER)) = 'SATURDAY' THEN 1 ELSE 0 END)  AS [OLPN LT Ship Confirmed to Delivered]
		 ,  (DATEDIFF(DD, MIN(PARCELL_SHIPMENT_CREATE_DATE), MIN(DATETIME_FIRST_ATTEMPT)) + 0)
              -(DATEDIFF(WK, MIN(PARCELL_SHIPMENT_CREATE_DATE), MIN(DATETIME_FIRST_ATTEMPT)) * 2)
              -(CASE WHEN DATENAME(DW, MIN(PARCELL_SHIPMENT_CREATE_DATE)) = 'SUNDAY' THEN 1 ELSE 0 END)
              -(CASE WHEN DATENAME(DW, MIN(DATETIME_FIRST_ATTEMPT)) = 'SATURDAY' THEN 1 ELSE 0 END)  AS [OLPN LT Ship Confirmed to First Attempt]
		,   (DATEDIFF(DD, MIN(PARCELL_SHIPMENT_CREATE_DATE), MAX(PARCEL_DELIVERED_PICKUP_LOCATION)) + 0)
               -(DATEDIFF(WK, MIN(PARCELL_SHIPMENT_CREATE_DATE), MAX(PARCEL_DELIVERED_PICKUP_LOCATION)) * 2)
               -(CASE WHEN DATENAME(DW, MIN(PARCELL_SHIPMENT_CREATE_DATE)) = 'SUNDAY' THEN 1 ELSE 0 END)
               -(CASE WHEN DATENAME(DW, MAX(PARCEL_DELIVERED_PICKUP_LOCATION)) = 'SATURDAY' THEN 1 ELSE 0 END)  AS [OLPN LT Ship Confirmed Pickup]
FROM (                           
SELECT 
	  C.SHIPPER_SHIPMENT_REF 
	, C.CONSIGNEE_REFERENCE  
	, C.SHIPMENT_ID AS SHIPMENT_ID
	, C.FORWARDER_NAME
	, C.DELIVERED
	, C.ONTIME
	, C.INTRANSIT
	, C.STATUS
	, C.PERFORMANCE
	, C.SLA_RATE_CODE
	, C.INCOTERM_CODE
	, C.DY_POSTAL_CODE
	, CASE WHEN PARCELL_CREATED = '1' THEN MIN(DATETIME_PARCELL_CREATED) END AS PARCELL_SHIPMENT_CREATE_DATE
	, CASE WHEN PARCELL_COLLECTED = '1' THEN MIN(DATETIME_PARCELL_COLLECTED) END AS PARCELL_COLLECT_DATE
	, CASE WHEN PARCELL_AT_PICKUP_LOCATION = '1' THEN MIN(DATETIME_PARCELL_AT_PICKUP_LOCATION) END AS PARCEL_DELIVERED_PICKUP_LOCATION
	, CASE WHEN PARCELL_DELIVERED = '1' THEN MIN(DATETIME_PARCELL_DELIVERED) END AS PARCEL_RECEIVED_BY_CUSTOMER
	, CASE WHEN PARCELL_BILLDATE_FLAG = '1' THEN MIN(BILLDATE) END AS PARCEL_BILLDATE
	, CASE WHEN PARCELL_DELIVERED > '1' THEN MAX(DATETIME_PARCELL_DELIVERED) END AS PARCEL_LAST_DELIVERY_DATE
	, CASE WHEN PARCELL_RETURNED = '1' THEN MAX(DATETIME_PARCELL_RETURNED) END AS PARCEL_RETURNED_TO_FD
	, CASE WHEN FIRST_ATTEMPT = '1' THEN MAX(DATETIME_FIRST_ATTEMPT) END AS DATETIME_FIRST_ATTEMPT
FROM CTE_EVENTS C
GROUP BY 
      C.SHIPPER_SHIPMENT_REF 
    , C.CONSIGNEE_REFERENCE 
    , C.SHIPMENT_ID 
	, C.FORWARDER_NAME
	, C.DELIVERED
	, C.ONTIME
	, C.INTRANSIT
    , C.PARCELL_CREATED
    , C.PARCELL_DELIVERED
	, C.PARCELL_BILLDATE_FLAG
    , C.PARCELL_AT_PICKUP_LOCATION
    , C.PARCELL_RETURNED
    , C.PARCELL_COLLECTED
    , C.FIRST_ATTEMPT
	 , C.STATUS
	 , C.PERFORMANCE
	 , C.SLA_RATE_CODE
	 , C.INCOTERM_CODE
	 , C.DY_POSTAL_CODE          
       ) VV
GROUP BY

	  VV.SHIPPER_SHIPMENT_REF 
	, VV.CONSIGNEE_REFERENCE 
	, VV.SHIPMENT_ID 
	, VV.FORWARDER_NAME
	, VV.DELIVERED
	, VV.ONTIME
	, VV.INTRANSIT
	, VV.STATUS
	, VV.PERFORMANCE
	, VV.SLA_RATE_CODE
	, VV.INCOTERM_CODE
	, VV.DY_POSTAL_CODE

UNION ALL

SELECT        '-1', '-1', '-1' , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,  NULL, NULL, NULL, NULL, NULL